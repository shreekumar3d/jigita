// Customizable Jig Generator
// In OpenSCAD, use "Description Only" for best user experience
// understanding the tunable parameters.
// -----------------------------------------------------
// Auto generated file by jigit, the awesome automatic
// jig generator for your PCB designs. Checkout the project
// at https://github.com/shreekumar3d/jigit
// -----------------------------------------------------
// Configuration file : config.toml
//
// Complete configuration file is embedded at the end of this
// file.
//Thickness(height) of base
Base_Thickness = 0.4; // [0.0:0.2:1.0]
/* [Include these footprints in output STL file] */
//Connector_PinHeader_2.54mm:PinHeader_1x20_P2.54mm_Vertical
Include_FP1_0_in_Jig=true; // [false,true]
//Connector_PinHeader_2.54mm:PinHeader_1x20_P2.54mm_Vertical
Include_FP1_1_in_Jig=true; // [false,true]
/* [Footprint: Connector_PinHeader_2.54mm:PinHeader_1x20_P2.54mm_Vertical] */
//XY Gap in shell for component insertion
Effective_Shell_Gap_For_FP1_0 = 0.1;
//Thickness of shell
Effective_Shell_Thickness_For_FP1_0 = 1.2;
//Z distance from start of shell to PCB
Effective_Shell_Clearance_From_PCB_For_FP1_0 = 1;
//Type of shell for this footprint
Shell_Type_For_FP1_0="fitting"; // [wiggle,fitting,fitting_flower,tight,courtyard]
//Insert this component into jig from this side.(Bottom insertion requires wiggle or courtyard shell to work)
Insert_FP1_0_From="top"; // [top,bottom]
//Wrapper thickness
Wrapper_Thickness_For_FP1_0=0.0; // [0:0.1:10.0]
//Wrapper height
Wrapper_Height_For_FP1_0=0.0; // [0:0.1:8.539479970932007]
/* [Footprint: Connector_PinHeader_2.54mm:PinHeader_1x20_P2.54mm_Vertical] */
//XY Gap in shell for component insertion
Effective_Shell_Gap_For_FP1_1 = 0.1;
//Thickness of shell
Effective_Shell_Thickness_For_FP1_1 = 1.2;
//Z distance from start of shell to PCB
Effective_Shell_Clearance_From_PCB_For_FP1_1 = 1;
//Type of shell for this footprint
Shell_Type_For_FP1_1="fitting"; // [wiggle,fitting,fitting_flower,tight,courtyard]
//Insert this component into jig from this side.(Bottom insertion requires wiggle or courtyard shell to work)
Insert_FP1_1_From="top"; // [top,bottom]
//Wrapper thickness
Wrapper_Thickness_For_FP1_1=0.0; // [0:0.1:10.0]
//Wrapper height
Wrapper_Height_For_FP1_1=0.0; // [0:0.1:8.539479970932007]
/* [Hidden] */

// Height of the tallest component on the top side
topmost_z=8.539479970932007;
    bottom_insertion_z = 9.339479970932008;
// Height of the individual components
max_z_FP1_0= (Insert_FP1_0_From=="bottom")? bottom_insertion_z : 8.539479970932007; //Applies to 3D Model(s): ${KICAD8_3DMODEL_DIR}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x20_P2.54mm_Vertical.wrl
min_z_FP1_0= -2.9997399854660034;
max_z_FP1_1= (Insert_FP1_1_From=="bottom")? bottom_insertion_z : 8.539479970932007; //Applies to 3D Model(s): ${KICAD8_3DMODEL_DIR}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x20_P2.54mm_Vertical.wrl
min_z_FP1_1= -2.9997399854660034;
// } END : Computed Values

tiny_dimension = 0.0001;
PCB_Thickness = 0;
c_Base_Thickness = Base_Thickness;
c_Base_Line_Height = 1.0;
module peri_line_scad(start,end,line_width){
	hull() {
		translate(v = start) {
			circle(d = line_width);
		}
		translate(v = end) {
			circle(d = line_width);
		}
	}
}
module fitting_cuts_FP1_0_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_0))]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 8.539479970932007) - max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + (2 * tiny_dimension))) {
					union() {
						peri_line_scad([0.3193328983662705, -48.579331497955145],[0.46075425460358, -48.720752854192455],0.4);
						peri_line_scad([0.3193328983662705, 0.3193328983662705],[0.46075425460358, 0.46075425460358],0.4);
						peri_line_scad([-0.3193328983662705, 0.3193328983662705],[-0.46075425460358, 0.46075425460358],0.4);
						peri_line_scad([-0.3193328983662705, -48.579331497955145],[-0.46075425460358, -48.720752854192455],0.4);
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 8.539479970932007) + (2 * tiny_dimension))) {
					union() {
						hull() {
							union() {
								peri_line_scad([0.31904000514745706, -45.58003860473633],[(0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 1.0)), (-45.58003860473633 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
								peri_line_scad([0.31904000514745706, -2.6799599948525454],[(0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 1.0)), (-2.6799599948525454 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
							}
						}
						hull() {
							union() {
								peri_line_scad([-0.31904000514745706, -2.6799599948525428],[(-0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * -1.0)), (-2.6799599948525428 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
								peri_line_scad([-0.31904000514745706, -45.58003860473633],[(-0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * -1.0)), (-45.58003860473633 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0))]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 2.54) - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + (2 * tiny_dimension))) {
					union() {
						peri_line_scad([-1.2690761204674887, 1.0156173317072148],[-1.4538520269697461, 1.0921540181802327],0.4);
						hull() {
							union() {
								peri_line_scad([-1.2690761200968321, -49.275616348529375],[-1.4538521007304213, -49.35215285603328],0.4);
								peri_line_scad([-1.0156173308123695, -49.52907612083815],[-1.0921541962544274, -49.7138519532089],0.4);
							}
						}
						peri_line_scad([-1.0156173308123695, -49.52907612083815],[-1.0921541962544274, -49.7138519532089],0.4);
						hull() {
							union() {
								peri_line_scad([1.0156173308123695, -49.52907612083815],[1.0921541962544274, -49.7138519532089],0.4);
								peri_line_scad([1.2690761200968321, -49.275616348529375],[1.4538521007304213, -49.35215285603328],0.4);
							}
						}
						peri_line_scad([1.2690761200968321, -49.275616348529375],[1.4538521007304213, -49.35215285603328],0.4);
						hull() {
							union() {
								peri_line_scad([1.2690761204674887, 1.0156173317072148],[1.4538520269697461, 1.0921540181802327],0.4);
								peri_line_scad([1.0156173317072148, 1.2690761204674887],[1.0921540181802327, 1.4538520269697461],0.4);
							}
						}
						peri_line_scad([1.0156173317072148, 1.2690761204674887],[1.0921540181802327, 1.4538520269697461],0.4);
						hull() {
							union() {
								peri_line_scad([-1.0156173317072148, 1.2690761204674887],[-1.0921540181802327, 1.4538520269697461],0.4);
								peri_line_scad([-1.2690761204674887, 1.0156173317072148],[-1.4538520269697461, 1.0921540181802327],0.4);
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 2.54) + (2 * tiny_dimension))) {
					union() {
						hull() {
							union() {
								peri_line_scad([-1.2690000000000001, -1.9839999848604202],[(-1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * -1.0)), (-1.9839999848604202 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
								peri_line_scad([-1.2690000000000001, -46.275999031066895],[(-1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * -1.0)), (-46.275999031066895 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
							}
						}
						hull() {
							union() {
								peri_line_scad([1.2690000000000001, -46.275999031066895],[(1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 1.0)), (-46.275999031066895 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
								peri_line_scad([1.2690000000000001, -1.983999984860418],[(1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 1.0)), (-1.983999984860418 + (((0.01 + Effective_Shell_Thickness_For_FP1_0) + Effective_Shell_Gap_For_FP1_0) * 0.0))],0.4);
							}
						}
					}
				}
			}
		}
	}
}
module hullpoly_FP1_0_0_0(){
	polygon(points = [[-1.27, 1.0160000151395798], [-1.27, -49.275999031066895], [-1.0160000151395798, -49.53], [1.0160000151395798, -49.53], [1.27, -49.275999031066895], [1.27, 1.0160000151395798], [1.0160000151395798, 1.27], [-1.0160000151395798, 1.27]]);
}
module hullpoly_FP1_0_0_1(){
	polygon(points = [[0.32004000514745706, -48.58003860473633], [0.32004000514745706, 0.32004000514745706], [-0.32004000514745706, 0.32004000514745706], [-0.32004000514745706, -48.58003860473633]]);
}
module fitting_pocket_FP1_0_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + -2.9997399854660034)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (5.539739985466003 + (2 * tiny_dimension))) {
					offset(r = Effective_Shell_Gap_For_FP1_0) {
						union() {
							hullpoly_FP1_0_0_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + 2.54)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (5.999479970932007 + (2 * tiny_dimension))) {
					offset(r = Effective_Shell_Gap_For_FP1_0) {
						union() {
							hullpoly_FP1_0_0_1();
						}
					}
				}
			}
		}
	}
}
module ref_FP1_0_0(){
	union() {
		hullpoly_FP1_0_0_0();
	}
}
module wiggle_pocket_FP1_0_0(){
	translate(v = [0, 0, (PCB_Thickness + min_z_FP1_0)]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = (max_z_FP1_0 - min_z_FP1_0)) {
				offset(r = Effective_Shell_Gap_For_FP1_0) {
					union() {
						ref_FP1_0_0();
					}
				}
			}
		}
	}
}
module perimeter_FP1_0_0(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_0) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
						union() {
							ref_FP1_0_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_0) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0) + Wrapper_Thickness_For_FP1_0)) {
							union() {
								ref_FP1_0_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
							union() {
								ref_FP1_0_0();
							}
						}
					}
				}
			}
		}
	}
}
module fitting_flower_FP1_0_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0)) - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((max_z_FP1_0 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + (2 * tiny_dimension))) {
					difference() {
						offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
							union() {
								hullpoly_FP1_0_0_0();
							}
						}
						offset(r = Effective_Shell_Gap_For_FP1_0) {
							union() {
								hullpoly_FP1_0_0_0();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness + max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_0)) - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((max_z_FP1_0 - max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + (2 * tiny_dimension))) {
					difference() {
						offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
							union() {
								hullpoly_FP1_0_0_1();
							}
						}
						offset(r = Effective_Shell_Gap_For_FP1_0) {
							union() {
								hullpoly_FP1_0_0_1();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_0) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0) + Wrapper_Thickness_For_FP1_0)) {
							union() {
								ref_FP1_0_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
							union() {
								ref_FP1_0_0();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness + max_z_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - max_z_FP1_0) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
						union() {
							ref_FP1_0_0();
						}
					}
				}
			}
		}
	}
}
module shape_FP1_0_0_0(){
	union() {
		polygon(points = [[1.016, -49.53], [1.266, -49.28], [1.27, -49.276], [1.27, -47.276], [1.27, -47.244], [1.02, -46.994], [1.016, -46.99], [1.266, -46.74], [1.27, -46.736], [1.27, -44.736], [1.27, -44.704], [1.02, -44.454], [1.016, -44.45], [1.266, -44.2], [1.27, -44.196], [1.27, -42.196], [1.27, -42.164], [1.02, -41.914], [1.016, -41.91], [1.266, -41.66], [1.27, -41.656], [1.27, -39.656], [1.27, -39.624], [1.02, -39.374], [1.016, -39.37], [1.266, -39.12], [1.27, -39.116], [1.27, -37.116], [1.27, -37.084], [1.02, -36.834], [1.016, -36.83], [1.266, -36.58], [1.27, -36.576], [1.27, -34.576], [1.27, -34.544], [1.02, -34.294], [1.016, -34.29], [1.266, -34.04], [1.27, -34.036], [1.27, -32.036], [1.27, -32.004], [1.02, -31.754], [1.016, -31.75], [1.266, -31.5], [1.27, -31.496], [1.27, -29.496], [1.27, -29.464], [1.02, -29.214], [1.016, -29.21], [1.266, -28.96], [1.27, -28.956], [1.27, -26.956], [1.27, -26.924], [1.02, -26.674], [1.016, -26.67], [1.266, -26.42], [1.27, -26.416], [1.27, -24.416], [1.27, -24.384], [1.02, -24.134], [1.016, -24.13], [1.266, -23.88], [1.27, -23.876], [1.27, -21.876], [1.27, -21.844], [1.02, -21.594], [1.016, -21.59], [1.266, -21.34], [1.27, -21.336], [1.27, -19.336], [1.27, -19.304], [1.02, -19.054], [1.016, -19.05], [1.266, -18.8], [1.27, -18.796], [1.27, -16.796], [1.27, -16.764], [1.02, -16.514], [1.016, -16.51], [1.266, -16.26], [1.27, -16.256], [1.27, -14.256], [1.27, -14.224], [1.02, -13.974], [1.016, -13.97], [1.266, -13.72], [1.27, -13.716], [1.27, -11.716], [1.27, -11.684], [1.02, -11.434], [1.016, -11.43], [1.266, -11.18], [1.27, -11.176], [1.27, -9.176], [1.27, -9.144], [1.02, -8.894], [1.016, -8.89], [1.266, -8.64], [1.27, -8.636], [1.27, -6.636], [1.27, -6.604], [1.02, -6.354], [1.016, -6.35], [1.266, -6.1], [1.27, -6.096], [1.27, -4.096], [1.27, -4.064], [1.02, -3.814], [1.016, -3.81], [1.266, -3.56], [1.27, -3.556], [1.27, -1.556], [1.27, -1.524], [1.02, -1.274], [1.016, -1.27], [1.266, -1.02], [1.27, -1.016], [1.27, 0.984], [1.27, 1.016], [1.02, 1.266], [1.016, 1.27], [-0.984, 1.27], [-1.016, 1.27], [-1.27, 1.016], [-1.27, -1.016], [-1.016, -1.27], [-1.27, -1.524], [-1.27, -3.556], [-1.016, -3.81], [-1.27, -4.064], [-1.27, -6.096], [-1.016, -6.35], [-1.27, -6.604], [-1.27, -8.636], [-1.016, -8.89], [-1.27, -9.144], [-1.27, -11.176], [-1.016, -11.43], [-1.27, -11.684], [-1.27, -13.716], [-1.016, -13.97], [-1.27, -14.224], [-1.27, -16.256], [-1.016, -16.51], [-1.27, -16.764], [-1.27, -18.796], [-1.016, -19.05], [-1.27, -19.304], [-1.27, -21.336], [-1.016, -21.59], [-1.27, -21.844], [-1.27, -23.876], [-1.016, -24.13], [-1.27, -24.384], [-1.27, -26.416], [-1.016, -26.67], [-1.27, -26.924], [-1.27, -28.956], [-1.016, -29.21], [-1.27, -29.464], [-1.27, -31.496], [-1.016, -31.75], [-1.27, -32.004], [-1.27, -34.036], [-1.016, -34.29], [-1.27, -34.544], [-1.27, -36.576], [-1.016, -36.83], [-1.27, -37.084], [-1.27, -39.116], [-1.016, -39.37], [-1.27, -39.624], [-1.27, -41.656], [-1.016, -41.91], [-1.27, -42.164], [-1.27, -44.196], [-1.016, -44.45], [-1.27, -44.704], [-1.27, -46.736], [-1.016, -46.99], [-1.27, -47.244], [-1.27, -49.276], [-1.016, -49.53]]);
	}
}
module keepout_volume_FP1_0_0_0(){
	translate(v = [0, 0, (PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0))]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = ((2.539479970932007 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + tiny_dimension)) {
				offset(r = Effective_Shell_Gap_For_FP1_0) {
					union() {
						shape_FP1_0_0_0();
					}
				}
			}
		}
	}
}
module shape_FP1_0_0_1(){
	union() {
		polygon(points = [[0.209, -0.658], [0.258, -0.65], [0.305, -0.638], [0.351, -0.622], [0.396, -0.601], [0.438, -0.576], [0.477, -0.547], [0.514, -0.514], [0.547, -0.477], [0.576, -0.438], [0.601, -0.396], [0.622, -0.351], [0.638, -0.305], [0.65, -0.258], [0.658, -0.209], [0.66, -0.16], [0.66, 0.16], [0.658, 0.209], [0.65, 0.258], [0.638, 0.305], [0.622, 0.351], [0.601, 0.396], [0.576, 0.438], [0.547, 0.477], [0.514, 0.514], [0.477, 0.547], [0.438, 0.576], [0.396, 0.601], [0.351, 0.622], [0.305, 0.638], [0.258, 0.65], [0.209, 0.658], [0.16, 0.66], [-0.16, 0.66], [-0.209, 0.658], [-0.258, 0.65], [-0.305, 0.638], [-0.351, 0.622], [-0.396, 0.601], [-0.438, 0.576], [-0.477, 0.547], [-0.514, 0.514], [-0.547, 0.477], [-0.576, 0.438], [-0.601, 0.396], [-0.622, 0.351], [-0.638, 0.305], [-0.65, 0.258], [-0.658, 0.209], [-0.66, 0.16], [-0.66, -0.16], [-0.658, -0.209], [-0.65, -0.258], [-0.638, -0.305], [-0.622, -0.351], [-0.601, -0.396], [-0.576, -0.438], [-0.547, -0.477], [-0.514, -0.514], [-0.477, -0.547], [-0.438, -0.576], [-0.396, -0.601], [-0.351, -0.622], [-0.305, -0.638], [-0.258, -0.65], [-0.209, -0.658], [-0.16, -0.66], [0.16, -0.66]]);
		polygon(points = [[0.209, -3.198], [0.258, -3.19], [0.305, -3.178], [0.351, -3.162], [0.396, -3.141], [0.438, -3.116], [0.477, -3.087], [0.514, -3.054], [0.547, -3.017], [0.576, -2.978], [0.601, -2.936], [0.622, -2.891], [0.638, -2.845], [0.65, -2.798], [0.658, -2.749], [0.66, -2.7], [0.66, -2.38], [0.658, -2.331], [0.65, -2.282], [0.638, -2.235], [0.622, -2.189], [0.601, -2.144], [0.576, -2.102], [0.547, -2.063], [0.514, -2.026], [0.477, -1.993], [0.438, -1.964], [0.396, -1.939], [0.351, -1.918], [0.305, -1.902], [0.258, -1.89], [0.209, -1.882], [0.16, -1.88], [-0.16, -1.88], [-0.209, -1.882], [-0.258, -1.89], [-0.305, -1.902], [-0.351, -1.918], [-0.396, -1.939], [-0.438, -1.964], [-0.477, -1.993], [-0.514, -2.026], [-0.547, -2.063], [-0.576, -2.102], [-0.601, -2.144], [-0.622, -2.189], [-0.638, -2.235], [-0.65, -2.282], [-0.658, -2.331], [-0.66, -2.38], [-0.66, -2.7], [-0.658, -2.749], [-0.65, -2.798], [-0.638, -2.845], [-0.622, -2.891], [-0.601, -2.936], [-0.576, -2.978], [-0.547, -3.017], [-0.514, -3.054], [-0.477, -3.087], [-0.438, -3.116], [-0.396, -3.141], [-0.351, -3.162], [-0.305, -3.178], [-0.258, -3.19], [-0.209, -3.198], [-0.16, -3.2], [0.16, -3.2]]);
		polygon(points = [[0.209, -5.738], [0.258, -5.73], [0.305, -5.718], [0.351, -5.702], [0.396, -5.681], [0.438, -5.656], [0.477, -5.627], [0.514, -5.594], [0.547, -5.557], [0.576, -5.518], [0.601, -5.476], [0.622, -5.431], [0.638, -5.385], [0.65, -5.338], [0.658, -5.289], [0.66, -5.24], [0.66, -4.92], [0.658, -4.871], [0.65, -4.822], [0.638, -4.775], [0.622, -4.729], [0.601, -4.684], [0.576, -4.642], [0.547, -4.603], [0.514, -4.566], [0.477, -4.533], [0.438, -4.504], [0.396, -4.479], [0.351, -4.458], [0.305, -4.442], [0.258, -4.43], [0.209, -4.422], [0.16, -4.42], [-0.16, -4.42], [-0.209, -4.422], [-0.258, -4.43], [-0.305, -4.442], [-0.351, -4.458], [-0.396, -4.479], [-0.438, -4.504], [-0.477, -4.533], [-0.514, -4.566], [-0.547, -4.603], [-0.576, -4.642], [-0.601, -4.684], [-0.622, -4.729], [-0.638, -4.775], [-0.65, -4.822], [-0.658, -4.871], [-0.66, -4.92], [-0.66, -5.24], [-0.658, -5.289], [-0.65, -5.338], [-0.638, -5.385], [-0.622, -5.431], [-0.601, -5.476], [-0.576, -5.518], [-0.547, -5.557], [-0.514, -5.594], [-0.477, -5.627], [-0.438, -5.656], [-0.396, -5.681], [-0.351, -5.702], [-0.305, -5.718], [-0.258, -5.73], [-0.209, -5.738], [-0.16, -5.74], [0.16, -5.74]]);
		polygon(points = [[0.209, -8.278], [0.258, -8.27], [0.305, -8.258], [0.351, -8.242], [0.396, -8.221], [0.438, -8.196], [0.477, -8.167], [0.514, -8.134], [0.547, -8.097], [0.576, -8.058], [0.601, -8.016], [0.622, -7.971], [0.638, -7.925], [0.65, -7.878], [0.658, -7.829], [0.66, -7.78], [0.66, -7.46], [0.658, -7.411], [0.65, -7.362], [0.638, -7.315], [0.622, -7.269], [0.601, -7.224], [0.576, -7.182], [0.547, -7.143], [0.514, -7.106], [0.477, -7.073], [0.438, -7.044], [0.396, -7.019], [0.351, -6.998], [0.305, -6.982], [0.258, -6.97], [0.209, -6.962], [0.16, -6.96], [-0.16, -6.96], [-0.209, -6.962], [-0.258, -6.97], [-0.305, -6.982], [-0.351, -6.998], [-0.396, -7.019], [-0.438, -7.044], [-0.477, -7.073], [-0.514, -7.106], [-0.547, -7.143], [-0.576, -7.182], [-0.601, -7.224], [-0.622, -7.269], [-0.638, -7.315], [-0.65, -7.362], [-0.658, -7.411], [-0.66, -7.46], [-0.66, -7.78], [-0.658, -7.829], [-0.65, -7.878], [-0.638, -7.925], [-0.622, -7.971], [-0.601, -8.016], [-0.576, -8.058], [-0.547, -8.097], [-0.514, -8.134], [-0.477, -8.167], [-0.438, -8.196], [-0.396, -8.221], [-0.351, -8.242], [-0.305, -8.258], [-0.258, -8.27], [-0.209, -8.278], [-0.16, -8.28], [0.16, -8.28]]);
		polygon(points = [[0.209, -10.818], [0.258, -10.81], [0.305, -10.798], [0.351, -10.782], [0.396, -10.761], [0.438, -10.736], [0.477, -10.707], [0.514, -10.674], [0.547, -10.637], [0.576, -10.598], [0.601, -10.556], [0.622, -10.511], [0.638, -10.465], [0.65, -10.418], [0.658, -10.369], [0.66, -10.32], [0.66, -10.0], [0.658, -9.951], [0.65, -9.902], [0.638, -9.855], [0.622, -9.809], [0.601, -9.764], [0.576, -9.722], [0.547, -9.683], [0.514, -9.646], [0.477, -9.613], [0.438, -9.584], [0.396, -9.559], [0.351, -9.538], [0.305, -9.522], [0.258, -9.51], [0.209, -9.502], [0.16, -9.5], [-0.16, -9.5], [-0.209, -9.502], [-0.258, -9.51], [-0.305, -9.522], [-0.351, -9.538], [-0.396, -9.559], [-0.438, -9.584], [-0.477, -9.613], [-0.514, -9.646], [-0.547, -9.683], [-0.576, -9.722], [-0.601, -9.764], [-0.622, -9.809], [-0.638, -9.855], [-0.65, -9.902], [-0.658, -9.951], [-0.66, -10.0], [-0.66, -10.32], [-0.658, -10.369], [-0.65, -10.418], [-0.638, -10.465], [-0.622, -10.511], [-0.601, -10.556], [-0.576, -10.598], [-0.547, -10.637], [-0.514, -10.674], [-0.477, -10.707], [-0.438, -10.736], [-0.396, -10.761], [-0.351, -10.782], [-0.305, -10.798], [-0.258, -10.81], [-0.209, -10.818], [-0.16, -10.82], [0.16, -10.82]]);
		polygon(points = [[0.209, -13.358], [0.258, -13.35], [0.305, -13.338], [0.351, -13.322], [0.396, -13.301], [0.438, -13.276], [0.477, -13.247], [0.514, -13.214], [0.547, -13.177], [0.576, -13.138], [0.601, -13.096], [0.622, -13.051], [0.638, -13.005], [0.65, -12.958], [0.658, -12.909], [0.66, -12.86], [0.66, -12.54], [0.658, -12.491], [0.65, -12.442], [0.638, -12.395], [0.622, -12.349], [0.601, -12.304], [0.576, -12.262], [0.547, -12.223], [0.514, -12.186], [0.477, -12.153], [0.438, -12.124], [0.396, -12.099], [0.351, -12.078], [0.305, -12.062], [0.258, -12.05], [0.209, -12.042], [0.16, -12.04], [-0.16, -12.04], [-0.209, -12.042], [-0.258, -12.05], [-0.305, -12.062], [-0.351, -12.078], [-0.396, -12.099], [-0.438, -12.124], [-0.477, -12.153], [-0.514, -12.186], [-0.547, -12.223], [-0.576, -12.262], [-0.601, -12.304], [-0.622, -12.349], [-0.638, -12.395], [-0.65, -12.442], [-0.658, -12.491], [-0.66, -12.54], [-0.66, -12.86], [-0.658, -12.909], [-0.65, -12.958], [-0.638, -13.005], [-0.622, -13.051], [-0.601, -13.096], [-0.576, -13.138], [-0.547, -13.177], [-0.514, -13.214], [-0.477, -13.247], [-0.438, -13.276], [-0.396, -13.301], [-0.351, -13.322], [-0.305, -13.338], [-0.258, -13.35], [-0.209, -13.358], [-0.16, -13.36], [0.16, -13.36]]);
		polygon(points = [[0.209, -15.898], [0.258, -15.89], [0.305, -15.878], [0.351, -15.862], [0.396, -15.841], [0.438, -15.816], [0.477, -15.787], [0.514, -15.754], [0.547, -15.717], [0.576, -15.678], [0.601, -15.636], [0.622, -15.591], [0.638, -15.545], [0.65, -15.498], [0.658, -15.449], [0.66, -15.4], [0.66, -15.08], [0.658, -15.031], [0.65, -14.982], [0.638, -14.935], [0.622, -14.889], [0.601, -14.844], [0.576, -14.802], [0.547, -14.763], [0.514, -14.726], [0.477, -14.693], [0.438, -14.664], [0.396, -14.639], [0.351, -14.618], [0.305, -14.602], [0.258, -14.59], [0.209, -14.582], [0.16, -14.58], [-0.16, -14.58], [-0.209, -14.582], [-0.258, -14.59], [-0.305, -14.602], [-0.351, -14.618], [-0.396, -14.639], [-0.438, -14.664], [-0.477, -14.693], [-0.514, -14.726], [-0.547, -14.763], [-0.576, -14.802], [-0.601, -14.844], [-0.622, -14.889], [-0.638, -14.935], [-0.65, -14.982], [-0.658, -15.031], [-0.66, -15.08], [-0.66, -15.4], [-0.658, -15.449], [-0.65, -15.498], [-0.638, -15.545], [-0.622, -15.591], [-0.601, -15.636], [-0.576, -15.678], [-0.547, -15.717], [-0.514, -15.754], [-0.477, -15.787], [-0.438, -15.816], [-0.396, -15.841], [-0.351, -15.862], [-0.305, -15.878], [-0.258, -15.89], [-0.209, -15.898], [-0.16, -15.9], [0.16, -15.9]]);
		polygon(points = [[0.209, -18.438], [0.258, -18.43], [0.305, -18.418], [0.351, -18.402], [0.396, -18.381], [0.438, -18.356], [0.477, -18.327], [0.514, -18.294], [0.547, -18.257], [0.576, -18.218], [0.601, -18.176], [0.622, -18.131], [0.638, -18.085], [0.65, -18.038], [0.658, -17.989], [0.66, -17.94], [0.66, -17.62], [0.658, -17.571], [0.65, -17.522], [0.638, -17.475], [0.622, -17.429], [0.601, -17.384], [0.576, -17.342], [0.547, -17.303], [0.514, -17.266], [0.477, -17.233], [0.438, -17.204], [0.396, -17.179], [0.351, -17.158], [0.305, -17.142], [0.258, -17.13], [0.209, -17.122], [0.16, -17.12], [-0.16, -17.12], [-0.209, -17.122], [-0.258, -17.13], [-0.305, -17.142], [-0.351, -17.158], [-0.396, -17.179], [-0.438, -17.204], [-0.477, -17.233], [-0.514, -17.266], [-0.547, -17.303], [-0.576, -17.342], [-0.601, -17.384], [-0.622, -17.429], [-0.638, -17.475], [-0.65, -17.522], [-0.658, -17.571], [-0.66, -17.62], [-0.66, -17.94], [-0.658, -17.989], [-0.65, -18.038], [-0.638, -18.085], [-0.622, -18.131], [-0.601, -18.176], [-0.576, -18.218], [-0.547, -18.257], [-0.514, -18.294], [-0.477, -18.327], [-0.438, -18.356], [-0.396, -18.381], [-0.351, -18.402], [-0.305, -18.418], [-0.258, -18.43], [-0.209, -18.438], [-0.16, -18.44], [0.16, -18.44]]);
		polygon(points = [[0.209, -20.978], [0.258, -20.97], [0.305, -20.958], [0.351, -20.942], [0.396, -20.921], [0.438, -20.896], [0.477, -20.867], [0.514, -20.834], [0.547, -20.797], [0.576, -20.758], [0.601, -20.716], [0.622, -20.671], [0.638, -20.625], [0.65, -20.578], [0.658, -20.529], [0.66, -20.48], [0.66, -20.16], [0.658, -20.111], [0.65, -20.062], [0.638, -20.015], [0.622, -19.969], [0.601, -19.924], [0.576, -19.882], [0.547, -19.843], [0.514, -19.806], [0.477, -19.773], [0.438, -19.744], [0.396, -19.719], [0.351, -19.698], [0.305, -19.682], [0.258, -19.67], [0.209, -19.662], [0.16, -19.66], [-0.16, -19.66], [-0.209, -19.662], [-0.258, -19.67], [-0.305, -19.682], [-0.351, -19.698], [-0.396, -19.719], [-0.438, -19.744], [-0.477, -19.773], [-0.514, -19.806], [-0.547, -19.843], [-0.576, -19.882], [-0.601, -19.924], [-0.622, -19.969], [-0.638, -20.015], [-0.65, -20.062], [-0.658, -20.111], [-0.66, -20.16], [-0.66, -20.48], [-0.658, -20.529], [-0.65, -20.578], [-0.638, -20.625], [-0.622, -20.671], [-0.601, -20.716], [-0.576, -20.758], [-0.547, -20.797], [-0.514, -20.834], [-0.477, -20.867], [-0.438, -20.896], [-0.396, -20.921], [-0.351, -20.942], [-0.305, -20.958], [-0.258, -20.97], [-0.209, -20.978], [-0.16, -20.98], [0.16, -20.98]]);
		polygon(points = [[0.209, -23.518], [0.258, -23.51], [0.305, -23.498], [0.351, -23.482], [0.396, -23.461], [0.438, -23.436], [0.477, -23.407], [0.514, -23.374], [0.547, -23.337], [0.576, -23.298], [0.601, -23.256], [0.622, -23.211], [0.638, -23.165], [0.65, -23.118], [0.658, -23.069], [0.66, -23.02], [0.66, -22.7], [0.658, -22.651], [0.65, -22.602], [0.638, -22.555], [0.622, -22.509], [0.601, -22.464], [0.576, -22.422], [0.547, -22.383], [0.514, -22.346], [0.477, -22.313], [0.438, -22.284], [0.396, -22.259], [0.351, -22.238], [0.305, -22.222], [0.258, -22.21], [0.209, -22.202], [0.16, -22.2], [-0.16, -22.2], [-0.209, -22.202], [-0.258, -22.21], [-0.305, -22.222], [-0.351, -22.238], [-0.396, -22.259], [-0.438, -22.284], [-0.477, -22.313], [-0.514, -22.346], [-0.547, -22.383], [-0.576, -22.422], [-0.601, -22.464], [-0.622, -22.509], [-0.638, -22.555], [-0.65, -22.602], [-0.658, -22.651], [-0.66, -22.7], [-0.66, -23.02], [-0.658, -23.069], [-0.65, -23.118], [-0.638, -23.165], [-0.622, -23.211], [-0.601, -23.256], [-0.576, -23.298], [-0.547, -23.337], [-0.514, -23.374], [-0.477, -23.407], [-0.438, -23.436], [-0.396, -23.461], [-0.351, -23.482], [-0.305, -23.498], [-0.258, -23.51], [-0.209, -23.518], [-0.16, -23.52], [0.16, -23.52]]);
		polygon(points = [[0.209, -26.058], [0.258, -26.05], [0.305, -26.038], [0.351, -26.022], [0.396, -26.001], [0.438, -25.976], [0.477, -25.947], [0.514, -25.914], [0.547, -25.877], [0.576, -25.838], [0.601, -25.796], [0.622, -25.751], [0.638, -25.705], [0.65, -25.658], [0.658, -25.609], [0.66, -25.56], [0.66, -25.24], [0.658, -25.191], [0.65, -25.142], [0.638, -25.095], [0.622, -25.049], [0.601, -25.004], [0.576, -24.962], [0.547, -24.923], [0.514, -24.886], [0.477, -24.853], [0.438, -24.824], [0.396, -24.799], [0.351, -24.778], [0.305, -24.762], [0.258, -24.75], [0.209, -24.742], [0.16, -24.74], [-0.16, -24.74], [-0.209, -24.742], [-0.258, -24.75], [-0.305, -24.762], [-0.351, -24.778], [-0.396, -24.799], [-0.438, -24.824], [-0.477, -24.853], [-0.514, -24.886], [-0.547, -24.923], [-0.576, -24.962], [-0.601, -25.004], [-0.622, -25.049], [-0.638, -25.095], [-0.65, -25.142], [-0.658, -25.191], [-0.66, -25.24], [-0.66, -25.56], [-0.658, -25.609], [-0.65, -25.658], [-0.638, -25.705], [-0.622, -25.751], [-0.601, -25.796], [-0.576, -25.838], [-0.547, -25.877], [-0.514, -25.914], [-0.477, -25.947], [-0.438, -25.976], [-0.396, -26.001], [-0.351, -26.022], [-0.305, -26.038], [-0.258, -26.05], [-0.209, -26.058], [-0.16, -26.06], [0.16, -26.06]]);
		polygon(points = [[0.209, -28.598], [0.258, -28.59], [0.305, -28.578], [0.351, -28.562], [0.396, -28.541], [0.438, -28.516], [0.477, -28.487], [0.514, -28.454], [0.547, -28.417], [0.576, -28.378], [0.601, -28.336], [0.622, -28.291], [0.638, -28.245], [0.65, -28.198], [0.658, -28.149], [0.66, -28.1], [0.66, -27.78], [0.658, -27.731], [0.65, -27.682], [0.638, -27.635], [0.622, -27.589], [0.601, -27.544], [0.576, -27.502], [0.547, -27.463], [0.514, -27.426], [0.477, -27.393], [0.438, -27.364], [0.396, -27.339], [0.351, -27.318], [0.305, -27.302], [0.258, -27.29], [0.209, -27.282], [0.16, -27.28], [-0.16, -27.28], [-0.209, -27.282], [-0.258, -27.29], [-0.305, -27.302], [-0.351, -27.318], [-0.396, -27.339], [-0.438, -27.364], [-0.477, -27.393], [-0.514, -27.426], [-0.547, -27.463], [-0.576, -27.502], [-0.601, -27.544], [-0.622, -27.589], [-0.638, -27.635], [-0.65, -27.682], [-0.658, -27.731], [-0.66, -27.78], [-0.66, -28.1], [-0.658, -28.149], [-0.65, -28.198], [-0.638, -28.245], [-0.622, -28.291], [-0.601, -28.336], [-0.576, -28.378], [-0.547, -28.417], [-0.514, -28.454], [-0.477, -28.487], [-0.438, -28.516], [-0.396, -28.541], [-0.351, -28.562], [-0.305, -28.578], [-0.258, -28.59], [-0.209, -28.598], [-0.16, -28.6], [0.16, -28.6]]);
		polygon(points = [[0.209, -31.138], [0.258, -31.13], [0.305, -31.118], [0.351, -31.102], [0.396, -31.081], [0.438, -31.056], [0.477, -31.027], [0.514, -30.994], [0.547, -30.957], [0.576, -30.918], [0.601, -30.876], [0.622, -30.831], [0.638, -30.785], [0.65, -30.738], [0.658, -30.689], [0.66, -30.64], [0.66, -30.32], [0.658, -30.271], [0.65, -30.222], [0.638, -30.175], [0.622, -30.129], [0.601, -30.084], [0.576, -30.042], [0.547, -30.003], [0.514, -29.966], [0.477, -29.933], [0.438, -29.904], [0.396, -29.879], [0.351, -29.858], [0.305, -29.842], [0.258, -29.83], [0.209, -29.822], [0.16, -29.82], [-0.16, -29.82], [-0.209, -29.822], [-0.258, -29.83], [-0.305, -29.842], [-0.351, -29.858], [-0.396, -29.879], [-0.438, -29.904], [-0.477, -29.933], [-0.514, -29.966], [-0.547, -30.003], [-0.576, -30.042], [-0.601, -30.084], [-0.622, -30.129], [-0.638, -30.175], [-0.65, -30.222], [-0.658, -30.271], [-0.66, -30.32], [-0.66, -30.64], [-0.658, -30.689], [-0.65, -30.738], [-0.638, -30.785], [-0.622, -30.831], [-0.601, -30.876], [-0.576, -30.918], [-0.547, -30.957], [-0.514, -30.994], [-0.477, -31.027], [-0.438, -31.056], [-0.396, -31.081], [-0.351, -31.102], [-0.305, -31.118], [-0.258, -31.13], [-0.209, -31.138], [-0.16, -31.14], [0.16, -31.14]]);
		polygon(points = [[0.209, -33.678], [0.258, -33.67], [0.305, -33.658], [0.351, -33.642], [0.396, -33.621], [0.438, -33.596], [0.477, -33.567], [0.514, -33.534], [0.547, -33.497], [0.576, -33.458], [0.601, -33.416], [0.622, -33.371], [0.638, -33.325], [0.65, -33.278], [0.658, -33.229], [0.66, -33.18], [0.66, -32.86], [0.658, -32.811], [0.65, -32.762], [0.638, -32.715], [0.622, -32.669], [0.601, -32.624], [0.576, -32.582], [0.547, -32.543], [0.514, -32.506], [0.477, -32.473], [0.438, -32.444], [0.396, -32.419], [0.351, -32.398], [0.305, -32.382], [0.258, -32.37], [0.209, -32.362], [0.16, -32.36], [-0.16, -32.36], [-0.209, -32.362], [-0.258, -32.37], [-0.305, -32.382], [-0.351, -32.398], [-0.396, -32.419], [-0.438, -32.444], [-0.477, -32.473], [-0.514, -32.506], [-0.547, -32.543], [-0.576, -32.582], [-0.601, -32.624], [-0.622, -32.669], [-0.638, -32.715], [-0.65, -32.762], [-0.658, -32.811], [-0.66, -32.86], [-0.66, -33.18], [-0.658, -33.229], [-0.65, -33.278], [-0.638, -33.325], [-0.622, -33.371], [-0.601, -33.416], [-0.576, -33.458], [-0.547, -33.497], [-0.514, -33.534], [-0.477, -33.567], [-0.438, -33.596], [-0.396, -33.621], [-0.351, -33.642], [-0.305, -33.658], [-0.258, -33.67], [-0.209, -33.678], [-0.16, -33.68], [0.16, -33.68]]);
		polygon(points = [[0.209, -36.218], [0.258, -36.21], [0.305, -36.198], [0.351, -36.182], [0.396, -36.161], [0.438, -36.136], [0.477, -36.107], [0.514, -36.074], [0.547, -36.037], [0.576, -35.998], [0.601, -35.956], [0.622, -35.911], [0.638, -35.865], [0.65, -35.818], [0.658, -35.769], [0.66, -35.72], [0.66, -35.4], [0.658, -35.351], [0.65, -35.302], [0.638, -35.255], [0.622, -35.209], [0.601, -35.164], [0.576, -35.122], [0.547, -35.083], [0.514, -35.046], [0.477, -35.013], [0.438, -34.984], [0.396, -34.959], [0.351, -34.938], [0.305, -34.922], [0.258, -34.91], [0.209, -34.902], [0.16, -34.9], [-0.16, -34.9], [-0.209, -34.902], [-0.258, -34.91], [-0.305, -34.922], [-0.351, -34.938], [-0.396, -34.959], [-0.438, -34.984], [-0.477, -35.013], [-0.514, -35.046], [-0.547, -35.083], [-0.576, -35.122], [-0.601, -35.164], [-0.622, -35.209], [-0.638, -35.255], [-0.65, -35.302], [-0.658, -35.351], [-0.66, -35.4], [-0.66, -35.72], [-0.658, -35.769], [-0.65, -35.818], [-0.638, -35.865], [-0.622, -35.911], [-0.601, -35.956], [-0.576, -35.998], [-0.547, -36.037], [-0.514, -36.074], [-0.477, -36.107], [-0.438, -36.136], [-0.396, -36.161], [-0.351, -36.182], [-0.305, -36.198], [-0.258, -36.21], [-0.209, -36.218], [-0.16, -36.22], [0.16, -36.22]]);
		polygon(points = [[0.209, -38.758], [0.258, -38.75], [0.305, -38.738], [0.351, -38.722], [0.396, -38.701], [0.438, -38.676], [0.477, -38.647], [0.514, -38.614], [0.547, -38.577], [0.576, -38.538], [0.601, -38.496], [0.622, -38.451], [0.638, -38.405], [0.65, -38.358], [0.658, -38.309], [0.66, -38.26], [0.66, -37.94], [0.658, -37.891], [0.65, -37.842], [0.638, -37.795], [0.622, -37.749], [0.601, -37.704], [0.576, -37.662], [0.547, -37.623], [0.514, -37.586], [0.477, -37.553], [0.438, -37.524], [0.396, -37.499], [0.351, -37.478], [0.305, -37.462], [0.258, -37.45], [0.209, -37.442], [0.16, -37.44], [-0.16, -37.44], [-0.209, -37.442], [-0.258, -37.45], [-0.305, -37.462], [-0.351, -37.478], [-0.396, -37.499], [-0.438, -37.524], [-0.477, -37.553], [-0.514, -37.586], [-0.547, -37.623], [-0.576, -37.662], [-0.601, -37.704], [-0.622, -37.749], [-0.638, -37.795], [-0.65, -37.842], [-0.658, -37.891], [-0.66, -37.94], [-0.66, -38.26], [-0.658, -38.309], [-0.65, -38.358], [-0.638, -38.405], [-0.622, -38.451], [-0.601, -38.496], [-0.576, -38.538], [-0.547, -38.577], [-0.514, -38.614], [-0.477, -38.647], [-0.438, -38.676], [-0.396, -38.701], [-0.351, -38.722], [-0.305, -38.738], [-0.258, -38.75], [-0.209, -38.758], [-0.16, -38.76], [0.16, -38.76]]);
		polygon(points = [[0.209, -41.298], [0.258, -41.29], [0.305, -41.278], [0.351, -41.262], [0.396, -41.241], [0.438, -41.216], [0.477, -41.187], [0.514, -41.154], [0.547, -41.117], [0.576, -41.078], [0.601, -41.036], [0.622, -40.991], [0.638, -40.945], [0.65, -40.898], [0.658, -40.849], [0.66, -40.8], [0.66, -40.48], [0.658, -40.431], [0.65, -40.382], [0.638, -40.335], [0.622, -40.289], [0.601, -40.244], [0.576, -40.202], [0.547, -40.163], [0.514, -40.126], [0.477, -40.093], [0.438, -40.064], [0.396, -40.039], [0.351, -40.018], [0.305, -40.002], [0.258, -39.99], [0.209, -39.982], [0.16, -39.98], [-0.16, -39.98], [-0.209, -39.982], [-0.258, -39.99], [-0.305, -40.002], [-0.351, -40.018], [-0.396, -40.039], [-0.438, -40.064], [-0.477, -40.093], [-0.514, -40.126], [-0.547, -40.163], [-0.576, -40.202], [-0.601, -40.244], [-0.622, -40.289], [-0.638, -40.335], [-0.65, -40.382], [-0.658, -40.431], [-0.66, -40.48], [-0.66, -40.8], [-0.658, -40.849], [-0.65, -40.898], [-0.638, -40.945], [-0.622, -40.991], [-0.601, -41.036], [-0.576, -41.078], [-0.547, -41.117], [-0.514, -41.154], [-0.477, -41.187], [-0.438, -41.216], [-0.396, -41.241], [-0.351, -41.262], [-0.305, -41.278], [-0.258, -41.29], [-0.209, -41.298], [-0.16, -41.3], [0.16, -41.3]]);
		polygon(points = [[0.209, -43.838], [0.258, -43.83], [0.305, -43.818], [0.351, -43.802], [0.396, -43.781], [0.438, -43.756], [0.477, -43.727], [0.514, -43.694], [0.547, -43.657], [0.576, -43.618], [0.601, -43.576], [0.622, -43.531], [0.638, -43.485], [0.65, -43.438], [0.658, -43.389], [0.66, -43.34], [0.66, -43.02], [0.658, -42.971], [0.65, -42.922], [0.638, -42.875], [0.622, -42.829], [0.601, -42.784], [0.576, -42.742], [0.547, -42.703], [0.514, -42.666], [0.477, -42.633], [0.438, -42.604], [0.396, -42.579], [0.351, -42.558], [0.305, -42.542], [0.258, -42.53], [0.209, -42.522], [0.16, -42.52], [-0.16, -42.52], [-0.209, -42.522], [-0.258, -42.53], [-0.305, -42.542], [-0.351, -42.558], [-0.396, -42.579], [-0.438, -42.604], [-0.477, -42.633], [-0.514, -42.666], [-0.547, -42.703], [-0.576, -42.742], [-0.601, -42.784], [-0.622, -42.829], [-0.638, -42.875], [-0.65, -42.922], [-0.658, -42.971], [-0.66, -43.02], [-0.66, -43.34], [-0.658, -43.389], [-0.65, -43.438], [-0.638, -43.485], [-0.622, -43.531], [-0.601, -43.576], [-0.576, -43.618], [-0.547, -43.657], [-0.514, -43.694], [-0.477, -43.727], [-0.438, -43.756], [-0.396, -43.781], [-0.351, -43.802], [-0.305, -43.818], [-0.258, -43.83], [-0.209, -43.838], [-0.16, -43.84], [0.16, -43.84]]);
		polygon(points = [[0.209, -46.378], [0.258, -46.37], [0.305, -46.358], [0.351, -46.342], [0.396, -46.321], [0.438, -46.296], [0.477, -46.267], [0.514, -46.234], [0.547, -46.197], [0.576, -46.158], [0.601, -46.116], [0.622, -46.071], [0.638, -46.025], [0.65, -45.978], [0.658, -45.929], [0.66, -45.88], [0.66, -45.56], [0.658, -45.511], [0.65, -45.462], [0.638, -45.415], [0.622, -45.369], [0.601, -45.324], [0.576, -45.282], [0.547, -45.243], [0.514, -45.206], [0.477, -45.173], [0.438, -45.144], [0.396, -45.119], [0.351, -45.098], [0.305, -45.082], [0.258, -45.07], [0.209, -45.062], [0.16, -45.06], [-0.16, -45.06], [-0.209, -45.062], [-0.258, -45.07], [-0.305, -45.082], [-0.351, -45.098], [-0.396, -45.119], [-0.438, -45.144], [-0.477, -45.173], [-0.514, -45.206], [-0.547, -45.243], [-0.576, -45.282], [-0.601, -45.324], [-0.622, -45.369], [-0.638, -45.415], [-0.65, -45.462], [-0.658, -45.511], [-0.66, -45.56], [-0.66, -45.88], [-0.658, -45.929], [-0.65, -45.978], [-0.638, -46.025], [-0.622, -46.071], [-0.601, -46.116], [-0.576, -46.158], [-0.547, -46.197], [-0.514, -46.234], [-0.477, -46.267], [-0.438, -46.296], [-0.396, -46.321], [-0.351, -46.342], [-0.305, -46.358], [-0.258, -46.37], [-0.209, -46.378], [-0.16, -46.38], [0.16, -46.38]]);
		polygon(points = [[0.209, -48.918], [0.258, -48.91], [0.305, -48.898], [0.351, -48.882], [0.396, -48.861], [0.438, -48.836], [0.477, -48.807], [0.514, -48.774], [0.547, -48.737], [0.576, -48.698], [0.601, -48.656], [0.622, -48.611], [0.638, -48.565], [0.65, -48.518], [0.658, -48.469], [0.66, -48.42], [0.66, -48.1], [0.658, -48.051], [0.65, -48.002], [0.638, -47.955], [0.622, -47.909], [0.601, -47.864], [0.576, -47.822], [0.547, -47.783], [0.514, -47.746], [0.477, -47.713], [0.438, -47.684], [0.396, -47.659], [0.351, -47.638], [0.305, -47.622], [0.258, -47.61], [0.209, -47.602], [0.16, -47.6], [-0.16, -47.6], [-0.209, -47.602], [-0.258, -47.61], [-0.305, -47.622], [-0.351, -47.638], [-0.396, -47.659], [-0.438, -47.684], [-0.477, -47.713], [-0.514, -47.746], [-0.547, -47.783], [-0.576, -47.822], [-0.601, -47.864], [-0.622, -47.909], [-0.638, -47.955], [-0.65, -48.002], [-0.658, -48.051], [-0.66, -48.1], [-0.66, -48.42], [-0.658, -48.469], [-0.65, -48.518], [-0.638, -48.565], [-0.622, -48.611], [-0.601, -48.656], [-0.576, -48.698], [-0.547, -48.737], [-0.514, -48.774], [-0.477, -48.807], [-0.438, -48.836], [-0.396, -48.861], [-0.351, -48.882], [-0.305, -48.898], [-0.258, -48.91], [-0.209, -48.918], [-0.16, -48.92], [0.16, -48.92]]);
	}
}
module keepout_volume_FP1_0_0_1(){
	translate(v = [0, 0, (PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0))]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = ((8.539479970932007 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_0)) + tiny_dimension)) {
				offset(r = Effective_Shell_Gap_For_FP1_0) {
					union() {
						shape_FP1_0_0_1();
					}
				}
			}
		}
	}
}
module tight_perimeter_FP1_0_0(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_0) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
						union() {
							shape_FP1_0_0_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_0)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_0) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0) + Wrapper_Thickness_For_FP1_0)) {
							union() {
								shape_FP1_0_0_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
							union() {
								shape_FP1_0_0_0();
							}
						}
					}
				}
			}
		}
	}
}
module tight_pocket_FP1_0_0(){
	union() {
		keepout_volume_FP1_0_0_0();
		keepout_volume_FP1_0_0_1();
	}
}
module courtyard_FP1_0(){
	polygon(points = [[1.8, 50.05], [1.8, -1.8], [-1.8, -1.8], [-1.8, 50.05]]);
}
module courtyard_pocket_FP1_0(){
	translate(v = [0, 0, PCB_Thickness]) {
		translate(v = [0, 0, min_z_FP1_0]) {
			linear_extrude(height = (max_z_FP1_0 - min_z_FP1_0)) {
				offset(r = Effective_Shell_Gap_For_FP1_0) {
					union() {
						courtyard_FP1_0();
					}
				}
			}
		}
	}
}
module courtyard_perimeter_FP1_0(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_0)]) {
			linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_0) + c_Base_Thickness)) {
				offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
					union() {
						courtyard_FP1_0();
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_0)]) {
			linear_extrude(height = Wrapper_Height_For_FP1_0) {
				difference() {
					offset(r = ((Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0) + Wrapper_Thickness_For_FP1_0)) {
						union() {
							courtyard_FP1_0();
						}
					}
					offset(r = (Effective_Shell_Gap_For_FP1_0 + Effective_Shell_Thickness_For_FP1_0)) {
						union() {
							courtyard_FP1_0();
						}
					}
				}
			}
		}
	}
}
module fitting_cuts_FP1_1_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_1))]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 8.539479970932007) - max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + (2 * tiny_dimension))) {
					union() {
						peri_line_scad([0.3193328983662705, -48.579331497955145],[0.46075425460358, -48.720752854192455],0.4);
						peri_line_scad([0.3193328983662705, 0.3193328983662705],[0.46075425460358, 0.46075425460358],0.4);
						peri_line_scad([-0.3193328983662705, 0.3193328983662705],[-0.46075425460358, 0.46075425460358],0.4);
						peri_line_scad([-0.3193328983662705, -48.579331497955145],[-0.46075425460358, -48.720752854192455],0.4);
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 8.539479970932007) + (2 * tiny_dimension))) {
					union() {
						hull() {
							union() {
								peri_line_scad([0.31904000514745706, -45.58003860473633],[(0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 1.0)), (-45.58003860473633 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
								peri_line_scad([0.31904000514745706, -2.6799599948525454],[(0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 1.0)), (-2.6799599948525454 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
							}
						}
						hull() {
							union() {
								peri_line_scad([-0.31904000514745706, -2.6799599948525428],[(-0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * -1.0)), (-2.6799599948525428 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
								peri_line_scad([-0.31904000514745706, -45.58003860473633],[(-0.31904000514745706 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * -1.0)), (-45.58003860473633 + (((0.9600000000000006 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1))]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 2.54) - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + (2 * tiny_dimension))) {
					union() {
						peri_line_scad([-1.2690761204674887, 1.0156173317072148],[-1.4538520269697461, 1.0921540181802327],0.4);
						hull() {
							union() {
								peri_line_scad([-1.2690761200968321, -49.275616348529375],[-1.4538521007304213, -49.35215285603328],0.4);
								peri_line_scad([-1.0156173308123695, -49.52907612083815],[-1.0921541962544274, -49.7138519532089],0.4);
							}
						}
						peri_line_scad([-1.0156173308123695, -49.52907612083815],[-1.0921541962544274, -49.7138519532089],0.4);
						hull() {
							union() {
								peri_line_scad([1.0156173308123695, -49.52907612083815],[1.0921541962544274, -49.7138519532089],0.4);
								peri_line_scad([1.2690761200968321, -49.275616348529375],[1.4538521007304213, -49.35215285603328],0.4);
							}
						}
						peri_line_scad([1.2690761200968321, -49.275616348529375],[1.4538521007304213, -49.35215285603328],0.4);
						hull() {
							union() {
								peri_line_scad([1.2690761204674887, 1.0156173317072148],[1.4538520269697461, 1.0921540181802327],0.4);
								peri_line_scad([1.0156173317072148, 1.2690761204674887],[1.0921540181802327, 1.4538520269697461],0.4);
							}
						}
						peri_line_scad([1.0156173317072148, 1.2690761204674887],[1.0921540181802327, 1.4538520269697461],0.4);
						hull() {
							union() {
								peri_line_scad([-1.0156173317072148, 1.2690761204674887],[-1.0921540181802327, 1.4538520269697461],0.4);
								peri_line_scad([-1.2690761204674887, 1.0156173317072148],[-1.4538520269697461, 1.0921540181802327],0.4);
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (min(((topmost_z + c_Base_Thickness) - c_Base_Line_Height), 2.54) + (2 * tiny_dimension))) {
					union() {
						hull() {
							union() {
								peri_line_scad([-1.2690000000000001, -1.9839999848604202],[(-1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * -1.0)), (-1.9839999848604202 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
								peri_line_scad([-1.2690000000000001, -46.275999031066895],[(-1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * -1.0)), (-46.275999031066895 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
							}
						}
						hull() {
							union() {
								peri_line_scad([1.2690000000000001, -46.275999031066895],[(1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 1.0)), (-46.275999031066895 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
								peri_line_scad([1.2690000000000001, -1.983999984860418],[(1.2690000000000001 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 1.0)), (-1.983999984860418 + (((0.01 + Effective_Shell_Thickness_For_FP1_1) + Effective_Shell_Gap_For_FP1_1) * 0.0))],0.4);
							}
						}
					}
				}
			}
		}
	}
}
module hullpoly_FP1_1_0_0(){
	polygon(points = [[-1.27, 1.0160000151395798], [-1.27, -49.275999031066895], [-1.0160000151395798, -49.53], [1.0160000151395798, -49.53], [1.27, -49.275999031066895], [1.27, 1.0160000151395798], [1.0160000151395798, 1.27], [-1.0160000151395798, 1.27]]);
}
module hullpoly_FP1_1_0_1(){
	polygon(points = [[0.32004000514745706, -48.58003860473633], [0.32004000514745706, 0.32004000514745706], [-0.32004000514745706, 0.32004000514745706], [-0.32004000514745706, -48.58003860473633]]);
}
module fitting_pocket_FP1_1_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + -2.9997399854660034)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (5.539739985466003 + (2 * tiny_dimension))) {
					offset(r = Effective_Shell_Gap_For_FP1_1) {
						union() {
							hullpoly_FP1_1_0_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness - tiny_dimension) + 2.54)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = (5.999479970932007 + (2 * tiny_dimension))) {
					offset(r = Effective_Shell_Gap_For_FP1_1) {
						union() {
							hullpoly_FP1_1_0_1();
						}
					}
				}
			}
		}
	}
}
module ref_FP1_1_0(){
	union() {
		hullpoly_FP1_1_0_0();
	}
}
module wiggle_pocket_FP1_1_0(){
	translate(v = [0, 0, (PCB_Thickness + min_z_FP1_1)]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = (max_z_FP1_1 - min_z_FP1_1)) {
				offset(r = Effective_Shell_Gap_For_FP1_1) {
					union() {
						ref_FP1_1_0();
					}
				}
			}
		}
	}
}
module perimeter_FP1_1_0(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_1) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
						union() {
							ref_FP1_1_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_1) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1) + Wrapper_Thickness_For_FP1_1)) {
							union() {
								ref_FP1_1_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
							union() {
								ref_FP1_1_0();
							}
						}
					}
				}
			}
		}
	}
}
module fitting_flower_FP1_1_0(){
	union() {
		translate(v = [0, 0, ((PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1)) - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((max_z_FP1_1 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + (2 * tiny_dimension))) {
					difference() {
						offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
							union() {
								hullpoly_FP1_1_0_0();
							}
						}
						offset(r = Effective_Shell_Gap_For_FP1_1) {
							union() {
								hullpoly_FP1_1_0_0();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, ((PCB_Thickness + max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_1)) - tiny_dimension)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((max_z_FP1_1 - max(2.54, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + (2 * tiny_dimension))) {
					difference() {
						offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
							union() {
								hullpoly_FP1_1_0_1();
							}
						}
						offset(r = Effective_Shell_Gap_For_FP1_1) {
							union() {
								hullpoly_FP1_1_0_1();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_1) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1) + Wrapper_Thickness_For_FP1_1)) {
							union() {
								ref_FP1_1_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
							union() {
								ref_FP1_1_0();
							}
						}
					}
				}
			}
		}
		translate(v = [0, 0, (PCB_Thickness + max_z_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - max_z_FP1_1) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
						union() {
							ref_FP1_1_0();
						}
					}
				}
			}
		}
	}
}
module shape_FP1_1_0_0(){
	union() {
		polygon(points = [[1.016, -49.53], [1.266, -49.28], [1.27, -49.276], [1.27, -47.276], [1.27, -47.244], [1.02, -46.994], [1.016, -46.99], [1.266, -46.74], [1.27, -46.736], [1.27, -44.736], [1.27, -44.704], [1.02, -44.454], [1.016, -44.45], [1.266, -44.2], [1.27, -44.196], [1.27, -42.196], [1.27, -42.164], [1.02, -41.914], [1.016, -41.91], [1.266, -41.66], [1.27, -41.656], [1.27, -39.656], [1.27, -39.624], [1.02, -39.374], [1.016, -39.37], [1.266, -39.12], [1.27, -39.116], [1.27, -37.116], [1.27, -37.084], [1.02, -36.834], [1.016, -36.83], [1.266, -36.58], [1.27, -36.576], [1.27, -34.576], [1.27, -34.544], [1.02, -34.294], [1.016, -34.29], [1.266, -34.04], [1.27, -34.036], [1.27, -32.036], [1.27, -32.004], [1.02, -31.754], [1.016, -31.75], [1.266, -31.5], [1.27, -31.496], [1.27, -29.496], [1.27, -29.464], [1.02, -29.214], [1.016, -29.21], [1.266, -28.96], [1.27, -28.956], [1.27, -26.956], [1.27, -26.924], [1.02, -26.674], [1.016, -26.67], [1.266, -26.42], [1.27, -26.416], [1.27, -24.416], [1.27, -24.384], [1.02, -24.134], [1.016, -24.13], [1.266, -23.88], [1.27, -23.876], [1.27, -21.876], [1.27, -21.844], [1.02, -21.594], [1.016, -21.59], [1.266, -21.34], [1.27, -21.336], [1.27, -19.336], [1.27, -19.304], [1.02, -19.054], [1.016, -19.05], [1.266, -18.8], [1.27, -18.796], [1.27, -16.796], [1.27, -16.764], [1.02, -16.514], [1.016, -16.51], [1.266, -16.26], [1.27, -16.256], [1.27, -14.256], [1.27, -14.224], [1.02, -13.974], [1.016, -13.97], [1.266, -13.72], [1.27, -13.716], [1.27, -11.716], [1.27, -11.684], [1.02, -11.434], [1.016, -11.43], [1.266, -11.18], [1.27, -11.176], [1.27, -9.176], [1.27, -9.144], [1.02, -8.894], [1.016, -8.89], [1.266, -8.64], [1.27, -8.636], [1.27, -6.636], [1.27, -6.604], [1.02, -6.354], [1.016, -6.35], [1.266, -6.1], [1.27, -6.096], [1.27, -4.096], [1.27, -4.064], [1.02, -3.814], [1.016, -3.81], [1.266, -3.56], [1.27, -3.556], [1.27, -1.556], [1.27, -1.524], [1.02, -1.274], [1.016, -1.27], [1.266, -1.02], [1.27, -1.016], [1.27, 0.984], [1.27, 1.016], [1.02, 1.266], [1.016, 1.27], [-0.984, 1.27], [-1.016, 1.27], [-1.27, 1.016], [-1.27, -1.016], [-1.016, -1.27], [-1.27, -1.524], [-1.27, -3.556], [-1.016, -3.81], [-1.27, -4.064], [-1.27, -6.096], [-1.016, -6.35], [-1.27, -6.604], [-1.27, -8.636], [-1.016, -8.89], [-1.27, -9.144], [-1.27, -11.176], [-1.016, -11.43], [-1.27, -11.684], [-1.27, -13.716], [-1.016, -13.97], [-1.27, -14.224], [-1.27, -16.256], [-1.016, -16.51], [-1.27, -16.764], [-1.27, -18.796], [-1.016, -19.05], [-1.27, -19.304], [-1.27, -21.336], [-1.016, -21.59], [-1.27, -21.844], [-1.27, -23.876], [-1.016, -24.13], [-1.27, -24.384], [-1.27, -26.416], [-1.016, -26.67], [-1.27, -26.924], [-1.27, -28.956], [-1.016, -29.21], [-1.27, -29.464], [-1.27, -31.496], [-1.016, -31.75], [-1.27, -32.004], [-1.27, -34.036], [-1.016, -34.29], [-1.27, -34.544], [-1.27, -36.576], [-1.016, -36.83], [-1.27, -37.084], [-1.27, -39.116], [-1.016, -39.37], [-1.27, -39.624], [-1.27, -41.656], [-1.016, -41.91], [-1.27, -42.164], [-1.27, -44.196], [-1.016, -44.45], [-1.27, -44.704], [-1.27, -46.736], [-1.016, -46.99], [-1.27, -47.244], [-1.27, -49.276], [-1.016, -49.53]]);
	}
}
module keepout_volume_FP1_1_0_0(){
	translate(v = [0, 0, (PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1))]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = ((2.539479970932007 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + tiny_dimension)) {
				offset(r = Effective_Shell_Gap_For_FP1_1) {
					union() {
						shape_FP1_1_0_0();
					}
				}
			}
		}
	}
}
module shape_FP1_1_0_1(){
	union() {
		polygon(points = [[0.209, -0.658], [0.258, -0.65], [0.305, -0.638], [0.351, -0.622], [0.396, -0.601], [0.438, -0.576], [0.477, -0.547], [0.514, -0.514], [0.547, -0.477], [0.576, -0.438], [0.601, -0.396], [0.622, -0.351], [0.638, -0.305], [0.65, -0.258], [0.658, -0.209], [0.66, -0.16], [0.66, 0.16], [0.658, 0.209], [0.65, 0.258], [0.638, 0.305], [0.622, 0.351], [0.601, 0.396], [0.576, 0.438], [0.547, 0.477], [0.514, 0.514], [0.477, 0.547], [0.438, 0.576], [0.396, 0.601], [0.351, 0.622], [0.305, 0.638], [0.258, 0.65], [0.209, 0.658], [0.16, 0.66], [-0.16, 0.66], [-0.209, 0.658], [-0.258, 0.65], [-0.305, 0.638], [-0.351, 0.622], [-0.396, 0.601], [-0.438, 0.576], [-0.477, 0.547], [-0.514, 0.514], [-0.547, 0.477], [-0.576, 0.438], [-0.601, 0.396], [-0.622, 0.351], [-0.638, 0.305], [-0.65, 0.258], [-0.658, 0.209], [-0.66, 0.16], [-0.66, -0.16], [-0.658, -0.209], [-0.65, -0.258], [-0.638, -0.305], [-0.622, -0.351], [-0.601, -0.396], [-0.576, -0.438], [-0.547, -0.477], [-0.514, -0.514], [-0.477, -0.547], [-0.438, -0.576], [-0.396, -0.601], [-0.351, -0.622], [-0.305, -0.638], [-0.258, -0.65], [-0.209, -0.658], [-0.16, -0.66], [0.16, -0.66]]);
		polygon(points = [[0.209, -3.198], [0.258, -3.19], [0.305, -3.178], [0.351, -3.162], [0.396, -3.141], [0.438, -3.116], [0.477, -3.087], [0.514, -3.054], [0.547, -3.017], [0.576, -2.978], [0.601, -2.936], [0.622, -2.891], [0.638, -2.845], [0.65, -2.798], [0.658, -2.749], [0.66, -2.7], [0.66, -2.38], [0.658, -2.331], [0.65, -2.282], [0.638, -2.235], [0.622, -2.189], [0.601, -2.144], [0.576, -2.102], [0.547, -2.063], [0.514, -2.026], [0.477, -1.993], [0.438, -1.964], [0.396, -1.939], [0.351, -1.918], [0.305, -1.902], [0.258, -1.89], [0.209, -1.882], [0.16, -1.88], [-0.16, -1.88], [-0.209, -1.882], [-0.258, -1.89], [-0.305, -1.902], [-0.351, -1.918], [-0.396, -1.939], [-0.438, -1.964], [-0.477, -1.993], [-0.514, -2.026], [-0.547, -2.063], [-0.576, -2.102], [-0.601, -2.144], [-0.622, -2.189], [-0.638, -2.235], [-0.65, -2.282], [-0.658, -2.331], [-0.66, -2.38], [-0.66, -2.7], [-0.658, -2.749], [-0.65, -2.798], [-0.638, -2.845], [-0.622, -2.891], [-0.601, -2.936], [-0.576, -2.978], [-0.547, -3.017], [-0.514, -3.054], [-0.477, -3.087], [-0.438, -3.116], [-0.396, -3.141], [-0.351, -3.162], [-0.305, -3.178], [-0.258, -3.19], [-0.209, -3.198], [-0.16, -3.2], [0.16, -3.2]]);
		polygon(points = [[0.209, -5.738], [0.258, -5.73], [0.305, -5.718], [0.351, -5.702], [0.396, -5.681], [0.438, -5.656], [0.477, -5.627], [0.514, -5.594], [0.547, -5.557], [0.576, -5.518], [0.601, -5.476], [0.622, -5.431], [0.638, -5.385], [0.65, -5.338], [0.658, -5.289], [0.66, -5.24], [0.66, -4.92], [0.658, -4.871], [0.65, -4.822], [0.638, -4.775], [0.622, -4.729], [0.601, -4.684], [0.576, -4.642], [0.547, -4.603], [0.514, -4.566], [0.477, -4.533], [0.438, -4.504], [0.396, -4.479], [0.351, -4.458], [0.305, -4.442], [0.258, -4.43], [0.209, -4.422], [0.16, -4.42], [-0.16, -4.42], [-0.209, -4.422], [-0.258, -4.43], [-0.305, -4.442], [-0.351, -4.458], [-0.396, -4.479], [-0.438, -4.504], [-0.477, -4.533], [-0.514, -4.566], [-0.547, -4.603], [-0.576, -4.642], [-0.601, -4.684], [-0.622, -4.729], [-0.638, -4.775], [-0.65, -4.822], [-0.658, -4.871], [-0.66, -4.92], [-0.66, -5.24], [-0.658, -5.289], [-0.65, -5.338], [-0.638, -5.385], [-0.622, -5.431], [-0.601, -5.476], [-0.576, -5.518], [-0.547, -5.557], [-0.514, -5.594], [-0.477, -5.627], [-0.438, -5.656], [-0.396, -5.681], [-0.351, -5.702], [-0.305, -5.718], [-0.258, -5.73], [-0.209, -5.738], [-0.16, -5.74], [0.16, -5.74]]);
		polygon(points = [[0.209, -8.278], [0.258, -8.27], [0.305, -8.258], [0.351, -8.242], [0.396, -8.221], [0.438, -8.196], [0.477, -8.167], [0.514, -8.134], [0.547, -8.097], [0.576, -8.058], [0.601, -8.016], [0.622, -7.971], [0.638, -7.925], [0.65, -7.878], [0.658, -7.829], [0.66, -7.78], [0.66, -7.46], [0.658, -7.411], [0.65, -7.362], [0.638, -7.315], [0.622, -7.269], [0.601, -7.224], [0.576, -7.182], [0.547, -7.143], [0.514, -7.106], [0.477, -7.073], [0.438, -7.044], [0.396, -7.019], [0.351, -6.998], [0.305, -6.982], [0.258, -6.97], [0.209, -6.962], [0.16, -6.96], [-0.16, -6.96], [-0.209, -6.962], [-0.258, -6.97], [-0.305, -6.982], [-0.351, -6.998], [-0.396, -7.019], [-0.438, -7.044], [-0.477, -7.073], [-0.514, -7.106], [-0.547, -7.143], [-0.576, -7.182], [-0.601, -7.224], [-0.622, -7.269], [-0.638, -7.315], [-0.65, -7.362], [-0.658, -7.411], [-0.66, -7.46], [-0.66, -7.78], [-0.658, -7.829], [-0.65, -7.878], [-0.638, -7.925], [-0.622, -7.971], [-0.601, -8.016], [-0.576, -8.058], [-0.547, -8.097], [-0.514, -8.134], [-0.477, -8.167], [-0.438, -8.196], [-0.396, -8.221], [-0.351, -8.242], [-0.305, -8.258], [-0.258, -8.27], [-0.209, -8.278], [-0.16, -8.28], [0.16, -8.28]]);
		polygon(points = [[0.209, -10.818], [0.258, -10.81], [0.305, -10.798], [0.351, -10.782], [0.396, -10.761], [0.438, -10.736], [0.477, -10.707], [0.514, -10.674], [0.547, -10.637], [0.576, -10.598], [0.601, -10.556], [0.622, -10.511], [0.638, -10.465], [0.65, -10.418], [0.658, -10.369], [0.66, -10.32], [0.66, -10.0], [0.658, -9.951], [0.65, -9.902], [0.638, -9.855], [0.622, -9.809], [0.601, -9.764], [0.576, -9.722], [0.547, -9.683], [0.514, -9.646], [0.477, -9.613], [0.438, -9.584], [0.396, -9.559], [0.351, -9.538], [0.305, -9.522], [0.258, -9.51], [0.209, -9.502], [0.16, -9.5], [-0.16, -9.5], [-0.209, -9.502], [-0.258, -9.51], [-0.305, -9.522], [-0.351, -9.538], [-0.396, -9.559], [-0.438, -9.584], [-0.477, -9.613], [-0.514, -9.646], [-0.547, -9.683], [-0.576, -9.722], [-0.601, -9.764], [-0.622, -9.809], [-0.638, -9.855], [-0.65, -9.902], [-0.658, -9.951], [-0.66, -10.0], [-0.66, -10.32], [-0.658, -10.369], [-0.65, -10.418], [-0.638, -10.465], [-0.622, -10.511], [-0.601, -10.556], [-0.576, -10.598], [-0.547, -10.637], [-0.514, -10.674], [-0.477, -10.707], [-0.438, -10.736], [-0.396, -10.761], [-0.351, -10.782], [-0.305, -10.798], [-0.258, -10.81], [-0.209, -10.818], [-0.16, -10.82], [0.16, -10.82]]);
		polygon(points = [[0.209, -13.358], [0.258, -13.35], [0.305, -13.338], [0.351, -13.322], [0.396, -13.301], [0.438, -13.276], [0.477, -13.247], [0.514, -13.214], [0.547, -13.177], [0.576, -13.138], [0.601, -13.096], [0.622, -13.051], [0.638, -13.005], [0.65, -12.958], [0.658, -12.909], [0.66, -12.86], [0.66, -12.54], [0.658, -12.491], [0.65, -12.442], [0.638, -12.395], [0.622, -12.349], [0.601, -12.304], [0.576, -12.262], [0.547, -12.223], [0.514, -12.186], [0.477, -12.153], [0.438, -12.124], [0.396, -12.099], [0.351, -12.078], [0.305, -12.062], [0.258, -12.05], [0.209, -12.042], [0.16, -12.04], [-0.16, -12.04], [-0.209, -12.042], [-0.258, -12.05], [-0.305, -12.062], [-0.351, -12.078], [-0.396, -12.099], [-0.438, -12.124], [-0.477, -12.153], [-0.514, -12.186], [-0.547, -12.223], [-0.576, -12.262], [-0.601, -12.304], [-0.622, -12.349], [-0.638, -12.395], [-0.65, -12.442], [-0.658, -12.491], [-0.66, -12.54], [-0.66, -12.86], [-0.658, -12.909], [-0.65, -12.958], [-0.638, -13.005], [-0.622, -13.051], [-0.601, -13.096], [-0.576, -13.138], [-0.547, -13.177], [-0.514, -13.214], [-0.477, -13.247], [-0.438, -13.276], [-0.396, -13.301], [-0.351, -13.322], [-0.305, -13.338], [-0.258, -13.35], [-0.209, -13.358], [-0.16, -13.36], [0.16, -13.36]]);
		polygon(points = [[0.209, -15.898], [0.258, -15.89], [0.305, -15.878], [0.351, -15.862], [0.396, -15.841], [0.438, -15.816], [0.477, -15.787], [0.514, -15.754], [0.547, -15.717], [0.576, -15.678], [0.601, -15.636], [0.622, -15.591], [0.638, -15.545], [0.65, -15.498], [0.658, -15.449], [0.66, -15.4], [0.66, -15.08], [0.658, -15.031], [0.65, -14.982], [0.638, -14.935], [0.622, -14.889], [0.601, -14.844], [0.576, -14.802], [0.547, -14.763], [0.514, -14.726], [0.477, -14.693], [0.438, -14.664], [0.396, -14.639], [0.351, -14.618], [0.305, -14.602], [0.258, -14.59], [0.209, -14.582], [0.16, -14.58], [-0.16, -14.58], [-0.209, -14.582], [-0.258, -14.59], [-0.305, -14.602], [-0.351, -14.618], [-0.396, -14.639], [-0.438, -14.664], [-0.477, -14.693], [-0.514, -14.726], [-0.547, -14.763], [-0.576, -14.802], [-0.601, -14.844], [-0.622, -14.889], [-0.638, -14.935], [-0.65, -14.982], [-0.658, -15.031], [-0.66, -15.08], [-0.66, -15.4], [-0.658, -15.449], [-0.65, -15.498], [-0.638, -15.545], [-0.622, -15.591], [-0.601, -15.636], [-0.576, -15.678], [-0.547, -15.717], [-0.514, -15.754], [-0.477, -15.787], [-0.438, -15.816], [-0.396, -15.841], [-0.351, -15.862], [-0.305, -15.878], [-0.258, -15.89], [-0.209, -15.898], [-0.16, -15.9], [0.16, -15.9]]);
		polygon(points = [[0.209, -18.438], [0.258, -18.43], [0.305, -18.418], [0.351, -18.402], [0.396, -18.381], [0.438, -18.356], [0.477, -18.327], [0.514, -18.294], [0.547, -18.257], [0.576, -18.218], [0.601, -18.176], [0.622, -18.131], [0.638, -18.085], [0.65, -18.038], [0.658, -17.989], [0.66, -17.94], [0.66, -17.62], [0.658, -17.571], [0.65, -17.522], [0.638, -17.475], [0.622, -17.429], [0.601, -17.384], [0.576, -17.342], [0.547, -17.303], [0.514, -17.266], [0.477, -17.233], [0.438, -17.204], [0.396, -17.179], [0.351, -17.158], [0.305, -17.142], [0.258, -17.13], [0.209, -17.122], [0.16, -17.12], [-0.16, -17.12], [-0.209, -17.122], [-0.258, -17.13], [-0.305, -17.142], [-0.351, -17.158], [-0.396, -17.179], [-0.438, -17.204], [-0.477, -17.233], [-0.514, -17.266], [-0.547, -17.303], [-0.576, -17.342], [-0.601, -17.384], [-0.622, -17.429], [-0.638, -17.475], [-0.65, -17.522], [-0.658, -17.571], [-0.66, -17.62], [-0.66, -17.94], [-0.658, -17.989], [-0.65, -18.038], [-0.638, -18.085], [-0.622, -18.131], [-0.601, -18.176], [-0.576, -18.218], [-0.547, -18.257], [-0.514, -18.294], [-0.477, -18.327], [-0.438, -18.356], [-0.396, -18.381], [-0.351, -18.402], [-0.305, -18.418], [-0.258, -18.43], [-0.209, -18.438], [-0.16, -18.44], [0.16, -18.44]]);
		polygon(points = [[0.209, -20.978], [0.258, -20.97], [0.305, -20.958], [0.351, -20.942], [0.396, -20.921], [0.438, -20.896], [0.477, -20.867], [0.514, -20.834], [0.547, -20.797], [0.576, -20.758], [0.601, -20.716], [0.622, -20.671], [0.638, -20.625], [0.65, -20.578], [0.658, -20.529], [0.66, -20.48], [0.66, -20.16], [0.658, -20.111], [0.65, -20.062], [0.638, -20.015], [0.622, -19.969], [0.601, -19.924], [0.576, -19.882], [0.547, -19.843], [0.514, -19.806], [0.477, -19.773], [0.438, -19.744], [0.396, -19.719], [0.351, -19.698], [0.305, -19.682], [0.258, -19.67], [0.209, -19.662], [0.16, -19.66], [-0.16, -19.66], [-0.209, -19.662], [-0.258, -19.67], [-0.305, -19.682], [-0.351, -19.698], [-0.396, -19.719], [-0.438, -19.744], [-0.477, -19.773], [-0.514, -19.806], [-0.547, -19.843], [-0.576, -19.882], [-0.601, -19.924], [-0.622, -19.969], [-0.638, -20.015], [-0.65, -20.062], [-0.658, -20.111], [-0.66, -20.16], [-0.66, -20.48], [-0.658, -20.529], [-0.65, -20.578], [-0.638, -20.625], [-0.622, -20.671], [-0.601, -20.716], [-0.576, -20.758], [-0.547, -20.797], [-0.514, -20.834], [-0.477, -20.867], [-0.438, -20.896], [-0.396, -20.921], [-0.351, -20.942], [-0.305, -20.958], [-0.258, -20.97], [-0.209, -20.978], [-0.16, -20.98], [0.16, -20.98]]);
		polygon(points = [[0.209, -23.518], [0.258, -23.51], [0.305, -23.498], [0.351, -23.482], [0.396, -23.461], [0.438, -23.436], [0.477, -23.407], [0.514, -23.374], [0.547, -23.337], [0.576, -23.298], [0.601, -23.256], [0.622, -23.211], [0.638, -23.165], [0.65, -23.118], [0.658, -23.069], [0.66, -23.02], [0.66, -22.7], [0.658, -22.651], [0.65, -22.602], [0.638, -22.555], [0.622, -22.509], [0.601, -22.464], [0.576, -22.422], [0.547, -22.383], [0.514, -22.346], [0.477, -22.313], [0.438, -22.284], [0.396, -22.259], [0.351, -22.238], [0.305, -22.222], [0.258, -22.21], [0.209, -22.202], [0.16, -22.2], [-0.16, -22.2], [-0.209, -22.202], [-0.258, -22.21], [-0.305, -22.222], [-0.351, -22.238], [-0.396, -22.259], [-0.438, -22.284], [-0.477, -22.313], [-0.514, -22.346], [-0.547, -22.383], [-0.576, -22.422], [-0.601, -22.464], [-0.622, -22.509], [-0.638, -22.555], [-0.65, -22.602], [-0.658, -22.651], [-0.66, -22.7], [-0.66, -23.02], [-0.658, -23.069], [-0.65, -23.118], [-0.638, -23.165], [-0.622, -23.211], [-0.601, -23.256], [-0.576, -23.298], [-0.547, -23.337], [-0.514, -23.374], [-0.477, -23.407], [-0.438, -23.436], [-0.396, -23.461], [-0.351, -23.482], [-0.305, -23.498], [-0.258, -23.51], [-0.209, -23.518], [-0.16, -23.52], [0.16, -23.52]]);
		polygon(points = [[0.209, -26.058], [0.258, -26.05], [0.305, -26.038], [0.351, -26.022], [0.396, -26.001], [0.438, -25.976], [0.477, -25.947], [0.514, -25.914], [0.547, -25.877], [0.576, -25.838], [0.601, -25.796], [0.622, -25.751], [0.638, -25.705], [0.65, -25.658], [0.658, -25.609], [0.66, -25.56], [0.66, -25.24], [0.658, -25.191], [0.65, -25.142], [0.638, -25.095], [0.622, -25.049], [0.601, -25.004], [0.576, -24.962], [0.547, -24.923], [0.514, -24.886], [0.477, -24.853], [0.438, -24.824], [0.396, -24.799], [0.351, -24.778], [0.305, -24.762], [0.258, -24.75], [0.209, -24.742], [0.16, -24.74], [-0.16, -24.74], [-0.209, -24.742], [-0.258, -24.75], [-0.305, -24.762], [-0.351, -24.778], [-0.396, -24.799], [-0.438, -24.824], [-0.477, -24.853], [-0.514, -24.886], [-0.547, -24.923], [-0.576, -24.962], [-0.601, -25.004], [-0.622, -25.049], [-0.638, -25.095], [-0.65, -25.142], [-0.658, -25.191], [-0.66, -25.24], [-0.66, -25.56], [-0.658, -25.609], [-0.65, -25.658], [-0.638, -25.705], [-0.622, -25.751], [-0.601, -25.796], [-0.576, -25.838], [-0.547, -25.877], [-0.514, -25.914], [-0.477, -25.947], [-0.438, -25.976], [-0.396, -26.001], [-0.351, -26.022], [-0.305, -26.038], [-0.258, -26.05], [-0.209, -26.058], [-0.16, -26.06], [0.16, -26.06]]);
		polygon(points = [[0.209, -28.598], [0.258, -28.59], [0.305, -28.578], [0.351, -28.562], [0.396, -28.541], [0.438, -28.516], [0.477, -28.487], [0.514, -28.454], [0.547, -28.417], [0.576, -28.378], [0.601, -28.336], [0.622, -28.291], [0.638, -28.245], [0.65, -28.198], [0.658, -28.149], [0.66, -28.1], [0.66, -27.78], [0.658, -27.731], [0.65, -27.682], [0.638, -27.635], [0.622, -27.589], [0.601, -27.544], [0.576, -27.502], [0.547, -27.463], [0.514, -27.426], [0.477, -27.393], [0.438, -27.364], [0.396, -27.339], [0.351, -27.318], [0.305, -27.302], [0.258, -27.29], [0.209, -27.282], [0.16, -27.28], [-0.16, -27.28], [-0.209, -27.282], [-0.258, -27.29], [-0.305, -27.302], [-0.351, -27.318], [-0.396, -27.339], [-0.438, -27.364], [-0.477, -27.393], [-0.514, -27.426], [-0.547, -27.463], [-0.576, -27.502], [-0.601, -27.544], [-0.622, -27.589], [-0.638, -27.635], [-0.65, -27.682], [-0.658, -27.731], [-0.66, -27.78], [-0.66, -28.1], [-0.658, -28.149], [-0.65, -28.198], [-0.638, -28.245], [-0.622, -28.291], [-0.601, -28.336], [-0.576, -28.378], [-0.547, -28.417], [-0.514, -28.454], [-0.477, -28.487], [-0.438, -28.516], [-0.396, -28.541], [-0.351, -28.562], [-0.305, -28.578], [-0.258, -28.59], [-0.209, -28.598], [-0.16, -28.6], [0.16, -28.6]]);
		polygon(points = [[0.209, -31.138], [0.258, -31.13], [0.305, -31.118], [0.351, -31.102], [0.396, -31.081], [0.438, -31.056], [0.477, -31.027], [0.514, -30.994], [0.547, -30.957], [0.576, -30.918], [0.601, -30.876], [0.622, -30.831], [0.638, -30.785], [0.65, -30.738], [0.658, -30.689], [0.66, -30.64], [0.66, -30.32], [0.658, -30.271], [0.65, -30.222], [0.638, -30.175], [0.622, -30.129], [0.601, -30.084], [0.576, -30.042], [0.547, -30.003], [0.514, -29.966], [0.477, -29.933], [0.438, -29.904], [0.396, -29.879], [0.351, -29.858], [0.305, -29.842], [0.258, -29.83], [0.209, -29.822], [0.16, -29.82], [-0.16, -29.82], [-0.209, -29.822], [-0.258, -29.83], [-0.305, -29.842], [-0.351, -29.858], [-0.396, -29.879], [-0.438, -29.904], [-0.477, -29.933], [-0.514, -29.966], [-0.547, -30.003], [-0.576, -30.042], [-0.601, -30.084], [-0.622, -30.129], [-0.638, -30.175], [-0.65, -30.222], [-0.658, -30.271], [-0.66, -30.32], [-0.66, -30.64], [-0.658, -30.689], [-0.65, -30.738], [-0.638, -30.785], [-0.622, -30.831], [-0.601, -30.876], [-0.576, -30.918], [-0.547, -30.957], [-0.514, -30.994], [-0.477, -31.027], [-0.438, -31.056], [-0.396, -31.081], [-0.351, -31.102], [-0.305, -31.118], [-0.258, -31.13], [-0.209, -31.138], [-0.16, -31.14], [0.16, -31.14]]);
		polygon(points = [[0.209, -33.678], [0.258, -33.67], [0.305, -33.658], [0.351, -33.642], [0.396, -33.621], [0.438, -33.596], [0.477, -33.567], [0.514, -33.534], [0.547, -33.497], [0.576, -33.458], [0.601, -33.416], [0.622, -33.371], [0.638, -33.325], [0.65, -33.278], [0.658, -33.229], [0.66, -33.18], [0.66, -32.86], [0.658, -32.811], [0.65, -32.762], [0.638, -32.715], [0.622, -32.669], [0.601, -32.624], [0.576, -32.582], [0.547, -32.543], [0.514, -32.506], [0.477, -32.473], [0.438, -32.444], [0.396, -32.419], [0.351, -32.398], [0.305, -32.382], [0.258, -32.37], [0.209, -32.362], [0.16, -32.36], [-0.16, -32.36], [-0.209, -32.362], [-0.258, -32.37], [-0.305, -32.382], [-0.351, -32.398], [-0.396, -32.419], [-0.438, -32.444], [-0.477, -32.473], [-0.514, -32.506], [-0.547, -32.543], [-0.576, -32.582], [-0.601, -32.624], [-0.622, -32.669], [-0.638, -32.715], [-0.65, -32.762], [-0.658, -32.811], [-0.66, -32.86], [-0.66, -33.18], [-0.658, -33.229], [-0.65, -33.278], [-0.638, -33.325], [-0.622, -33.371], [-0.601, -33.416], [-0.576, -33.458], [-0.547, -33.497], [-0.514, -33.534], [-0.477, -33.567], [-0.438, -33.596], [-0.396, -33.621], [-0.351, -33.642], [-0.305, -33.658], [-0.258, -33.67], [-0.209, -33.678], [-0.16, -33.68], [0.16, -33.68]]);
		polygon(points = [[0.209, -36.218], [0.258, -36.21], [0.305, -36.198], [0.351, -36.182], [0.396, -36.161], [0.438, -36.136], [0.477, -36.107], [0.514, -36.074], [0.547, -36.037], [0.576, -35.998], [0.601, -35.956], [0.622, -35.911], [0.638, -35.865], [0.65, -35.818], [0.658, -35.769], [0.66, -35.72], [0.66, -35.4], [0.658, -35.351], [0.65, -35.302], [0.638, -35.255], [0.622, -35.209], [0.601, -35.164], [0.576, -35.122], [0.547, -35.083], [0.514, -35.046], [0.477, -35.013], [0.438, -34.984], [0.396, -34.959], [0.351, -34.938], [0.305, -34.922], [0.258, -34.91], [0.209, -34.902], [0.16, -34.9], [-0.16, -34.9], [-0.209, -34.902], [-0.258, -34.91], [-0.305, -34.922], [-0.351, -34.938], [-0.396, -34.959], [-0.438, -34.984], [-0.477, -35.013], [-0.514, -35.046], [-0.547, -35.083], [-0.576, -35.122], [-0.601, -35.164], [-0.622, -35.209], [-0.638, -35.255], [-0.65, -35.302], [-0.658, -35.351], [-0.66, -35.4], [-0.66, -35.72], [-0.658, -35.769], [-0.65, -35.818], [-0.638, -35.865], [-0.622, -35.911], [-0.601, -35.956], [-0.576, -35.998], [-0.547, -36.037], [-0.514, -36.074], [-0.477, -36.107], [-0.438, -36.136], [-0.396, -36.161], [-0.351, -36.182], [-0.305, -36.198], [-0.258, -36.21], [-0.209, -36.218], [-0.16, -36.22], [0.16, -36.22]]);
		polygon(points = [[0.209, -38.758], [0.258, -38.75], [0.305, -38.738], [0.351, -38.722], [0.396, -38.701], [0.438, -38.676], [0.477, -38.647], [0.514, -38.614], [0.547, -38.577], [0.576, -38.538], [0.601, -38.496], [0.622, -38.451], [0.638, -38.405], [0.65, -38.358], [0.658, -38.309], [0.66, -38.26], [0.66, -37.94], [0.658, -37.891], [0.65, -37.842], [0.638, -37.795], [0.622, -37.749], [0.601, -37.704], [0.576, -37.662], [0.547, -37.623], [0.514, -37.586], [0.477, -37.553], [0.438, -37.524], [0.396, -37.499], [0.351, -37.478], [0.305, -37.462], [0.258, -37.45], [0.209, -37.442], [0.16, -37.44], [-0.16, -37.44], [-0.209, -37.442], [-0.258, -37.45], [-0.305, -37.462], [-0.351, -37.478], [-0.396, -37.499], [-0.438, -37.524], [-0.477, -37.553], [-0.514, -37.586], [-0.547, -37.623], [-0.576, -37.662], [-0.601, -37.704], [-0.622, -37.749], [-0.638, -37.795], [-0.65, -37.842], [-0.658, -37.891], [-0.66, -37.94], [-0.66, -38.26], [-0.658, -38.309], [-0.65, -38.358], [-0.638, -38.405], [-0.622, -38.451], [-0.601, -38.496], [-0.576, -38.538], [-0.547, -38.577], [-0.514, -38.614], [-0.477, -38.647], [-0.438, -38.676], [-0.396, -38.701], [-0.351, -38.722], [-0.305, -38.738], [-0.258, -38.75], [-0.209, -38.758], [-0.16, -38.76], [0.16, -38.76]]);
		polygon(points = [[0.209, -41.298], [0.258, -41.29], [0.305, -41.278], [0.351, -41.262], [0.396, -41.241], [0.438, -41.216], [0.477, -41.187], [0.514, -41.154], [0.547, -41.117], [0.576, -41.078], [0.601, -41.036], [0.622, -40.991], [0.638, -40.945], [0.65, -40.898], [0.658, -40.849], [0.66, -40.8], [0.66, -40.48], [0.658, -40.431], [0.65, -40.382], [0.638, -40.335], [0.622, -40.289], [0.601, -40.244], [0.576, -40.202], [0.547, -40.163], [0.514, -40.126], [0.477, -40.093], [0.438, -40.064], [0.396, -40.039], [0.351, -40.018], [0.305, -40.002], [0.258, -39.99], [0.209, -39.982], [0.16, -39.98], [-0.16, -39.98], [-0.209, -39.982], [-0.258, -39.99], [-0.305, -40.002], [-0.351, -40.018], [-0.396, -40.039], [-0.438, -40.064], [-0.477, -40.093], [-0.514, -40.126], [-0.547, -40.163], [-0.576, -40.202], [-0.601, -40.244], [-0.622, -40.289], [-0.638, -40.335], [-0.65, -40.382], [-0.658, -40.431], [-0.66, -40.48], [-0.66, -40.8], [-0.658, -40.849], [-0.65, -40.898], [-0.638, -40.945], [-0.622, -40.991], [-0.601, -41.036], [-0.576, -41.078], [-0.547, -41.117], [-0.514, -41.154], [-0.477, -41.187], [-0.438, -41.216], [-0.396, -41.241], [-0.351, -41.262], [-0.305, -41.278], [-0.258, -41.29], [-0.209, -41.298], [-0.16, -41.3], [0.16, -41.3]]);
		polygon(points = [[0.209, -43.838], [0.258, -43.83], [0.305, -43.818], [0.351, -43.802], [0.396, -43.781], [0.438, -43.756], [0.477, -43.727], [0.514, -43.694], [0.547, -43.657], [0.576, -43.618], [0.601, -43.576], [0.622, -43.531], [0.638, -43.485], [0.65, -43.438], [0.658, -43.389], [0.66, -43.34], [0.66, -43.02], [0.658, -42.971], [0.65, -42.922], [0.638, -42.875], [0.622, -42.829], [0.601, -42.784], [0.576, -42.742], [0.547, -42.703], [0.514, -42.666], [0.477, -42.633], [0.438, -42.604], [0.396, -42.579], [0.351, -42.558], [0.305, -42.542], [0.258, -42.53], [0.209, -42.522], [0.16, -42.52], [-0.16, -42.52], [-0.209, -42.522], [-0.258, -42.53], [-0.305, -42.542], [-0.351, -42.558], [-0.396, -42.579], [-0.438, -42.604], [-0.477, -42.633], [-0.514, -42.666], [-0.547, -42.703], [-0.576, -42.742], [-0.601, -42.784], [-0.622, -42.829], [-0.638, -42.875], [-0.65, -42.922], [-0.658, -42.971], [-0.66, -43.02], [-0.66, -43.34], [-0.658, -43.389], [-0.65, -43.438], [-0.638, -43.485], [-0.622, -43.531], [-0.601, -43.576], [-0.576, -43.618], [-0.547, -43.657], [-0.514, -43.694], [-0.477, -43.727], [-0.438, -43.756], [-0.396, -43.781], [-0.351, -43.802], [-0.305, -43.818], [-0.258, -43.83], [-0.209, -43.838], [-0.16, -43.84], [0.16, -43.84]]);
		polygon(points = [[0.209, -46.378], [0.258, -46.37], [0.305, -46.358], [0.351, -46.342], [0.396, -46.321], [0.438, -46.296], [0.477, -46.267], [0.514, -46.234], [0.547, -46.197], [0.576, -46.158], [0.601, -46.116], [0.622, -46.071], [0.638, -46.025], [0.65, -45.978], [0.658, -45.929], [0.66, -45.88], [0.66, -45.56], [0.658, -45.511], [0.65, -45.462], [0.638, -45.415], [0.622, -45.369], [0.601, -45.324], [0.576, -45.282], [0.547, -45.243], [0.514, -45.206], [0.477, -45.173], [0.438, -45.144], [0.396, -45.119], [0.351, -45.098], [0.305, -45.082], [0.258, -45.07], [0.209, -45.062], [0.16, -45.06], [-0.16, -45.06], [-0.209, -45.062], [-0.258, -45.07], [-0.305, -45.082], [-0.351, -45.098], [-0.396, -45.119], [-0.438, -45.144], [-0.477, -45.173], [-0.514, -45.206], [-0.547, -45.243], [-0.576, -45.282], [-0.601, -45.324], [-0.622, -45.369], [-0.638, -45.415], [-0.65, -45.462], [-0.658, -45.511], [-0.66, -45.56], [-0.66, -45.88], [-0.658, -45.929], [-0.65, -45.978], [-0.638, -46.025], [-0.622, -46.071], [-0.601, -46.116], [-0.576, -46.158], [-0.547, -46.197], [-0.514, -46.234], [-0.477, -46.267], [-0.438, -46.296], [-0.396, -46.321], [-0.351, -46.342], [-0.305, -46.358], [-0.258, -46.37], [-0.209, -46.378], [-0.16, -46.38], [0.16, -46.38]]);
		polygon(points = [[0.209, -48.918], [0.258, -48.91], [0.305, -48.898], [0.351, -48.882], [0.396, -48.861], [0.438, -48.836], [0.477, -48.807], [0.514, -48.774], [0.547, -48.737], [0.576, -48.698], [0.601, -48.656], [0.622, -48.611], [0.638, -48.565], [0.65, -48.518], [0.658, -48.469], [0.66, -48.42], [0.66, -48.1], [0.658, -48.051], [0.65, -48.002], [0.638, -47.955], [0.622, -47.909], [0.601, -47.864], [0.576, -47.822], [0.547, -47.783], [0.514, -47.746], [0.477, -47.713], [0.438, -47.684], [0.396, -47.659], [0.351, -47.638], [0.305, -47.622], [0.258, -47.61], [0.209, -47.602], [0.16, -47.6], [-0.16, -47.6], [-0.209, -47.602], [-0.258, -47.61], [-0.305, -47.622], [-0.351, -47.638], [-0.396, -47.659], [-0.438, -47.684], [-0.477, -47.713], [-0.514, -47.746], [-0.547, -47.783], [-0.576, -47.822], [-0.601, -47.864], [-0.622, -47.909], [-0.638, -47.955], [-0.65, -48.002], [-0.658, -48.051], [-0.66, -48.1], [-0.66, -48.42], [-0.658, -48.469], [-0.65, -48.518], [-0.638, -48.565], [-0.622, -48.611], [-0.601, -48.656], [-0.576, -48.698], [-0.547, -48.737], [-0.514, -48.774], [-0.477, -48.807], [-0.438, -48.836], [-0.396, -48.861], [-0.351, -48.882], [-0.305, -48.898], [-0.258, -48.91], [-0.209, -48.918], [-0.16, -48.92], [0.16, -48.92]]);
	}
}
module keepout_volume_FP1_1_0_1(){
	translate(v = [0, 0, (PCB_Thickness + max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1))]) {
		rotate(a = [0, 0, 0]) {
			linear_extrude(height = ((8.539479970932007 - max(-2.9997399854660034, Effective_Shell_Clearance_From_PCB_For_FP1_1)) + tiny_dimension)) {
				offset(r = Effective_Shell_Gap_For_FP1_1) {
					union() {
						shape_FP1_1_0_1();
					}
				}
			}
		}
	}
}
module tight_perimeter_FP1_1_0(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_1) + c_Base_Thickness)) {
					offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
						union() {
							shape_FP1_1_0_0();
						}
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_1)]) {
			rotate(a = [0, 0, 0]) {
				linear_extrude(height = Wrapper_Height_For_FP1_1) {
					difference() {
						offset(r = ((Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1) + Wrapper_Thickness_For_FP1_1)) {
							union() {
								shape_FP1_1_0_0();
							}
						}
						offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
							union() {
								shape_FP1_1_0_0();
							}
						}
					}
				}
			}
		}
	}
}
module tight_pocket_FP1_1_0(){
	union() {
		keepout_volume_FP1_1_0_0();
		keepout_volume_FP1_1_0_1();
	}
}
module courtyard_FP1_1(){
	polygon(points = [[1.8, 50.05], [1.8, -1.8], [-1.8, -1.8], [-1.8, 50.05]]);
}
module courtyard_pocket_FP1_1(){
	translate(v = [0, 0, PCB_Thickness]) {
		translate(v = [0, 0, min_z_FP1_1]) {
			linear_extrude(height = (max_z_FP1_1 - min_z_FP1_1)) {
				offset(r = Effective_Shell_Gap_For_FP1_1) {
					union() {
						courtyard_FP1_1();
					}
				}
			}
		}
	}
}
module courtyard_perimeter_FP1_1(){
	union() {
		translate(v = [0, 0, (PCB_Thickness + Effective_Shell_Clearance_From_PCB_For_FP1_1)]) {
			linear_extrude(height = ((topmost_z - Effective_Shell_Clearance_From_PCB_For_FP1_1) + c_Base_Thickness)) {
				offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
					union() {
						courtyard_FP1_1();
					}
				}
			}
		}
		translate(v = [0, 0, (((PCB_Thickness + topmost_z) + c_Base_Thickness) - Wrapper_Height_For_FP1_1)]) {
			linear_extrude(height = Wrapper_Height_For_FP1_1) {
				difference() {
					offset(r = ((Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1) + Wrapper_Thickness_For_FP1_1)) {
						union() {
							courtyard_FP1_1();
						}
					}
					offset(r = (Effective_Shell_Gap_For_FP1_1 + Effective_Shell_Thickness_For_FP1_1)) {
						union() {
							courtyard_FP1_1();
						}
					}
				}
			}
		}
	}
}

//
module mounted_component_shells() {
  union() {
  translate([12.57,60.83,0]) {
  rotate([0,0,0]) {
  if(Include_FP1_0_in_Jig) {
    if(Shell_Type_For_FP1_0=="courtyard") {
      courtyard_perimeter_FP1_0();
    } else if(Shell_Type_For_FP1_0=="tight") {
      tight_perimeter_FP1_0_0();
    } else if(Shell_Type_For_FP1_0=="fitting_flower") {
      fitting_flower_FP1_0_0();
    } else {
      perimeter_FP1_0_0();
    }
  }
  }
  }
  translate([37.71,60.83,0]) {
  rotate([0,0,0]) {
  if(Include_FP1_1_in_Jig) {
    if(Shell_Type_For_FP1_1=="courtyard") {
      courtyard_perimeter_FP1_1();
    } else if(Shell_Type_For_FP1_1=="tight") {
      tight_perimeter_FP1_1_0();
    } else if(Shell_Type_For_FP1_1=="fitting_flower") {
      fitting_flower_FP1_1_0();
    } else {
      perimeter_FP1_1_0();
    }
  }
  }
  }
  }
}
module mounted_component_cuts() {
  union() {
  translate([12.57,60.83,0]) {
  rotate([0,0,0]) {
    if(Include_FP1_0_in_Jig) {
      if(Shell_Type_For_FP1_0=="fitting") {
        fitting_cuts_FP1_0_0();
      } else if(Shell_Type_For_FP1_0=="fitting_flower") {
        fitting_cuts_FP1_0_0();
      }
    }
  }
  }
  translate([37.71,60.83,0]) {
  rotate([0,0,0]) {
    if(Include_FP1_1_in_Jig) {
      if(Shell_Type_For_FP1_1=="fitting") {
        fitting_cuts_FP1_1_0();
      } else if(Shell_Type_For_FP1_1=="fitting_flower") {
        fitting_cuts_FP1_1_0();
      }
    }
  }
  }
  }
}
module mounted_component_pockets() {
  union() {
  translate([12.57,60.83,0]) {
  rotate([0,0,0]) {
    if(Shell_Type_For_FP1_0=="courtyard") {
      courtyard_pocket_FP1_0();
    } else if(Shell_Type_For_FP1_0=="wiggle") {
      wiggle_pocket_FP1_0_0();
    } else if(Shell_Type_For_FP1_0=="tight") {
      tight_pocket_FP1_0_0();
    } else { //fitting or fitting_flower
      fitting_pocket_FP1_0_0();
    }
  }
  }
  translate([37.71,60.83,0]) {
  rotate([0,0,0]) {
    if(Shell_Type_For_FP1_1=="courtyard") {
      courtyard_pocket_FP1_1();
    } else if(Shell_Type_For_FP1_1=="wiggle") {
      wiggle_pocket_FP1_1_0();
    } else if(Shell_Type_For_FP1_1=="tight") {
      tight_pocket_FP1_1_0();
    } else { //fitting or fitting_flower
      fitting_pocket_FP1_1_0();
    }
  }
  }
  }
}
module all_models() {
  difference() {
    mounted_component_shells();
    union() {
      mounted_component_cuts();
      mounted_component_pockets();
    }
  }
}
orient_to_print=1;
if(orient_to_print == 1) {
  rotate([180,0,0]) all_models();
} else {
  all_models();
}
